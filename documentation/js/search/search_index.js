var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Address.html",[0,0.679,1,1.977]],["body/entities/Address.html",[0,0.921,1,2.682,2,1.331,3,0.141,4,0.125,5,0.125,6,3.403,7,0.333,8,1.301,9,4.398,10,5.326,11,4.082,12,1.094,13,5.326,14,5.326,15,4.398,16,3.014,17,5.326,18,0.795,19,0.015,20,0.93,21,1.402,22,2.727,23,0.795,24,3.919,25,3.919,26,2.997,27,2.786,28,3.919,29,2.143,30,2.167,31,3.919,32,3.919,33,3.919,34,2.917,35,3.919,36,2.169,37,5.374,38,3.919,39,3.919,40,0.215,41,2.608,42,2.974,43,0.914,44,0.141,45,0.045,46,0.01,47,0.01]],["title/entities/Address-1.html",[0,0.566,1,1.649,48,2.869]],["body/entities/Address-1.html",[0,0.872,1,2.538,2,1.23,3,0.13,4,0.115,5,0.115,7,0.307,8,1.231,9,4.216,12,1.049,18,0.792,19,0.015,20,0.974,21,1.396,22,2.658,23,0.792,30,1.279,40,0.145,43,0.844,44,0.13,45,0.042,46,0.009,47,0.009,49,3.143,50,5.106,51,5.106,52,5.106,53,2.797,54,4.597,55,4.597,56,4.597,57,5.106,58,3.372,59,3.042,60,3.619,61,3.619,62,3.619,63,3.619,64,3.619,65,3.619,66,1.869,67,3.619,68,3.619,69,3.619,70,3.619,71,3.372]],["title/controllers/AddressController.html",[72,1.155,73,2.84]],["body/controllers/AddressController.html",[1,3.875,3,0.087,4,0.077,5,0.077,7,0.206,12,1.159,16,3.212,18,0.753,19,0.015,21,1.054,23,0.598,29,2.663,40,0.267,41,1.615,44,0.087,45,0.028,46,0.007,47,0.007,72,0.708,73,2.711,74,0.708,75,2.108,76,1.211,77,1.145,78,1.588,79,1.39,80,1.39,81,1.707,82,1.336,83,2.007,84,2.108,85,3.746,86,1.421,87,1.284,88,6.826,89,5.681,90,3.78,91,3.778,92,3.525,93,3.78,94,2.427,95,1.857,96,1.597,97,1.597,98,1.721,99,2.427,100,1.421,101,4.553,102,6.018,103,1.896,104,1.741,105,2.427,106,0.892,107,1.421,108,3.78,109,2.427,110,0.857,111,2.427,112,2.209,113,3.78,114,2.353,115,2.427,116,0.857,117,4.325,118,2.108,119,3.78,120,2.427,121,1.887,122,1.887,123,1.898,124,1.274,125,5.242,126,2.427,127,2.427,128,1.421,129,0.45,130,2.891,131,2.108,132,2.108,133,2.956,134,2.108,135,1.274,136,3.331,137,6.018,138,3.78,139,0.825,140,1.898,141,1.741,142,2.427,143,2.427,144,4.442,145,2.427,146,2.427,147,2.427,148,2.427,149,2.427,150,1.154,151,1.102,152,3.145,153,3.328,154,1.274,155,2.427,156,2.427,157,2.427,158,1.274,159,1.274,160,2.427,161,1.898,162,2.427,163,2.427,164,1.274,165,2.427,166,1.274,167,0.892,168,2.427]],["title/modules/AddressModule.html",[169,1.155,170,2.636]],["body/modules/AddressModule.html",[1,2.417,3,0.174,4,0.154,5,0.154,19,0.014,40,0.296,44,0.174,45,0.056,46,0.011,47,0.011,73,4.884,74,1.804,129,0.899,130,5.002,131,4.205,140,3.786,169,1.987,170,5.128,171,2.014,172,2.014,173,2.199,174,2.199,175,2.014,176,3.093,177,3.093,178,4.205,179,4.205,180,4.205,181,2.808,182,2.199,183,2.104,184,4.842,185,2.303,186,1.467,187,4.842,188,2.303,189,4.842]],["title/injectables/AddressService.html",[130,2.465,190,1.072]],["body/injectables/AddressService.html",[1,3.395,3,0.101,4,0.089,5,0.089,7,0.238,12,1.317,16,3.225,18,0.67,19,0.015,23,0.67,29,2.776,40,0.264,41,1.864,43,0.653,44,0.101,45,0.032,46,0.007,47,0.007,77,1.278,78,1.278,81,2.559,82,1.491,83,1.996,84,3.665,85,3.965,87,1.434,95,2.082,96,1.79,97,1.79,98,1.836,103,1.648,110,1.491,112,1.333,116,0.99,117,4.528,129,0.52,130,2.627,132,2.433,133,3.299,134,2.433,140,2.19,151,1.272,167,1.866,186,0.849,190,1.142,191,1.217,192,2.433,193,4.219,194,4.219,195,2.106,196,2.801,197,2.688,198,2.801,199,4.219,200,2.801,201,3.54,202,4.219,203,2.801,204,4.219,205,2.801,206,2.801,207,2.801,208,2.009,209,1.398,210,2.801,211,1.398,212,2.141,213,2.801,214,2.801,215,2.801,216,4.409,217,2.801,218,1.615,219,4.219,220,2.215,221,2.433,222,2.801,223,2.801,224,2.801,225,2.801,226,2.801,227,2.801,228,2.801,229,2.801,230,2.801,231,2.801,232,2.801,233,2.801,234,2.801,235,2.19]],["title/controllers/AppController.html",[72,1.155,236,2.84]],["body/controllers/AppController.html",[3,0.194,4,0.172,5,0.172,7,0.458,19,0.014,20,0.805,21,1.001,23,0.568,40,0.264,44,0.194,45,0.062,46,0.012,47,0.012,72,1.93,74,1.574,77,2.004,98,1.634,103,1.574,129,1.001,150,2.566,151,2.45,236,4.744,237,4.685,238,6.477,239,5.394,240,4.453,241,4.685,242,5.394]],["title/modules/AppModule.html",[169,1.155,243,2.84]],["body/modules/AppModule.html",[3,0.122,4,0.109,5,0.109,18,0.359,19,0.015,40,0.309,44,0.122,45,0.039,46,0.009,47,0.009,59,1.867,74,1.423,129,0.633,169,1.661,170,4.548,171,1.42,172,1.42,173,1.551,174,1.551,175,1.42,176,2.586,177,1.551,181,2.216,182,1.551,183,1.483,185,1.624,186,1.034,188,2.321,236,4.083,240,4.255,241,2.965,243,5.795,244,2.965,245,2.965,246,2.965,247,4.548,248,4.548,249,4.548,250,4.548,251,4.548,252,4.548,253,4.548,254,4.003,255,4.548,256,3.413,257,3.413,258,2.669,259,3.413,260,3.413,261,3.413,262,3.413,263,3.413,264,3.413,265,3.413,266,3.413,267,3.413,268,3.413,269,4.878,270,3.413,271,3.413,272,3.413,273,3.413,274,2.669,275,1.999,276,3.413,277,3.413,278,3.413,279,3.413,280,3.413]],["title/injectables/AppService.html",[190,1.072,240,2.465]],["body/injectables/AppService.html",[3,0.201,4,0.179,5,0.179,7,0.476,19,0.014,20,0.824,23,0.59,40,0.224,44,0.201,45,0.065,46,0.012,47,0.012,77,2.051,98,1.699,103,1.636,129,1.04,190,1.833,191,2.436,238,6.563,240,4.216,281,4.87,282,5.607,283,5.607,284,5.607]],["title/entities/Auth.html",[0,0.679,285,2.465]],["body/entities/Auth.html",[0,0.999,2,1.501,3,0.159,4,0.141,5,0.141,7,0.375,8,1.41,12,1.163,16,2.323,18,0.778,19,0.014,20,0.931,21,1.372,22,2.544,23,0.778,26,3.147,27,2.96,30,1.561,34,3.1,40,0.177,43,1.03,44,0.159,45,0.051,46,0.01,47,0.01,53,3.1,59,2.23,66,2.141,275,3.817,285,3.626,286,3.837,287,3.817,288,4.674,289,3.817,290,4.417,291,2.94,292,4.417,293,4.417,294,4.417,295,3.168,296,4.417,297,4.417,298,2.94,299,2.205]],["title/controllers/AuthController.html",[72,1.155,300,2.84]],["body/controllers/AuthController.html",[3,0.135,4,0.12,5,0.12,7,0.32,16,2.886,18,0.55,19,0.015,21,0.97,23,0.55,40,0.273,44,0.135,45,0.043,46,0.009,47,0.009,72,1.099,74,1.099,76,1.88,77,1.584,81,2.594,87,2.205,92,2.207,95,1.71,96,1.47,97,1.47,98,1.584,103,1.526,121,1.88,122,1.88,128,2.207,129,0.699,135,1.977,136,3.325,139,1.28,150,1.792,151,1.711,152,2.895,167,1.923,212,1.848,218,2.002,285,2.345,300,3.751,301,3.272,302,5.636,303,5.636,304,3.272,305,4.696,306,3.767,307,4.542,308,6.489,309,3.767,310,3.063,311,3.272,312,4.696,313,3.767,314,3.767,315,2.345,316,3.74,317,3.272,318,3.272,319,3.272,320,3.767,321,3.767,322,3.767,323,3.767,324,3.256,325,3.767,326,2.345,327,3.767,328,3.256,329,3.256,330,3.256,331,2.345,332,3.767,333,3.767,334,3.767,335,3.767]],["title/modules/AuthModule.html",[169,1.155,247,2.636]],["body/modules/AuthModule.html",[3,0.16,4,0.142,5,0.142,19,0.015,40,0.302,44,0.16,45,0.051,46,0.01,47,0.01,74,1.712,129,0.829,169,1.912,171,1.859,172,1.859,173,2.03,174,2.03,175,1.859,176,2.977,177,2.977,181,2.666,182,2.03,183,1.941,185,2.125,186,1.354,188,2.125,247,5.032,285,2.782,300,4.7,316,4.945,317,3.881,336,3.881,337,3.881,338,3.881,339,4.468,340,4.468,341,3.881,342,4.468,343,3.494,344,5.868,345,3.494,346,4.468,347,4.468,348,4.468,349,4.468,350,4.468,351,4.468,352,3.881,353,3.881,354,4.468,355,4.468,356,4.468]],["title/injectables/AuthService.html",[190,1.072,316,2.465]],["body/injectables/AuthService.html",[3,0.118,4,0.105,5,0.105,7,0.279,16,2.691,18,0.642,19,0.015,20,0.821,23,0.642,40,0.285,43,0.766,44,0.118,45,0.038,46,0.008,47,0.008,53,3.079,77,1.438,81,2.667,87,1.116,95,1.995,96,1.715,97,1.715,98,1.688,103,1.78,129,0.609,167,2.243,186,0.995,190,1.285,191,1.427,195,2.368,197,2.903,201,3.367,209,1.639,211,2.368,212,2.383,216,2.852,218,1.257,275,3.791,285,2.045,288,3.996,302,4.121,303,4.121,304,4.121,305,4.308,311,4.121,312,4.49,316,2.954,318,2.852,319,2.852,341,2.852,343,2.568,357,2.852,358,4.745,359,3.284,360,6.955,361,3.284,362,4.745,363,3.284,364,3.284,365,4.745,366,3.284,367,3.71,368,3.284,369,4.745,370,3.284,371,2.852,372,3.284,373,3.284,374,3.284,375,3.284,376,3.284,377,3.284,378,3.284,379,3.284,380,3.284,381,3.284,382,3.284,383,3.284,384,3.284,385,3.284,386,3.284,387,3.284]],["title/entities/Cart.html",[0,0.679,388,2.32]],["body/entities/Cart.html",[0,0.81,2,1.109,3,0.117,4,0.104,5,0.104,7,0.277,8,1.144,12,0.99,18,0.793,19,0.015,20,0.895,21,1.398,22,2.281,23,0.793,26,2.764,27,2.522,29,2.835,30,1.153,34,2.641,40,0.189,43,0.761,44,0.117,45,0.038,46,0.008,47,0.008,53,2.641,58,2.764,59,2.971,66,1.737,71,3.421,287,3.252,289,3.252,388,3.252,389,2.834,390,4.341,391,5.551,392,4.821,393,3.456,394,5.551,395,4.821,396,4.821,397,4.821,398,3.264,399,3.264,400,3.264,401,3.935,402,3.264,403,3.264,404,3.264,405,4.05,406,2.172,407,3.693,408,4.724,409,3.264,410,3.264,411,3.264,412,3.264,413,3.264,414,3.264,415,3.144,416,2.172]],["title/controllers/CartController.html",[72,1.155,417,2.84]],["body/controllers/CartController.html",[3,0.104,4,0.092,5,0.092,7,0.246,12,1.312,18,0.605,19,0.015,20,0.855,21,1.141,23,0.647,40,0.23,44,0.104,45,0.033,46,0.008,47,0.008,72,0.846,74,0.846,76,1.447,77,1.312,78,1.742,79,2.113,80,1.592,81,2.781,82,1.53,83,2.031,86,1.699,87,2.193,92,1.699,95,1.879,96,1.615,97,1.615,98,1.864,100,1.699,103,1.795,106,1.066,107,1.699,110,1.025,112,2.466,114,1.805,116,1.025,121,2.162,122,2.162,124,1.522,128,1.699,129,0.538,135,1.522,136,3.572,139,0.985,150,1.38,151,1.317,152,3.405,154,1.522,158,1.522,159,1.522,164,1.522,166,1.522,167,2.113,212,1.025,218,2.2,310,3.603,315,1.805,324,3.579,326,1.805,328,3.579,329,3.579,330,3.579,331,3.227,388,4.354,417,3.106,418,2.519,419,2.519,420,3.221,421,2.9,422,3.761,423,4.331,424,2.9,425,2.9,426,1.805,427,2.9,428,2.869,429,1.93,430,2.9,431,1.805,432,3.227,433,2.519,434,2.268,435,2.9,436,2.9,437,2.9,438,2.9,439,2.9,440,1.93,441,1.805,442,1.605,443,2.9,444,2.9]],["title/entities/CartItem.html",[0,0.679,405,2.636]],["body/entities/CartItem.html",[0,1.004,2,1.514,3,0.16,4,0.142,5,0.142,7,0.378,8,1.418,12,1.168,18,0.76,19,0.014,20,0.846,21,1.34,22,2.312,23,0.76,29,2.773,30,1.574,36,2.466,40,0.234,42,3.242,43,1.039,44,0.16,45,0.051,46,0.01,47,0.01,66,2.153,388,4.543,401,3.242,405,3.898,445,6.438,446,3.484,447,5.117,448,4.355,449,5.117,450,5.857,451,4.455,452,4.455,453,4.455,454,4.201,455,4.455,456,4.455,457,4.455]],["title/modules/CartModule.html",[169,1.155,248,2.636]],["body/modules/CartModule.html",[3,0.17,4,0.151,5,0.151,19,0.014,40,0.301,44,0.17,45,0.055,46,0.011,47,0.011,74,1.779,129,0.879,169,1.967,171,1.972,172,1.972,173,2.153,174,2.153,175,1.972,176,3.062,177,3.062,181,2.77,182,2.153,183,2.059,185,2.254,186,1.436,188,2.254,248,5.103,388,2.776,405,4.058,416,3.154,417,4.835,432,4.987,433,4.116,434,3.706,458,4.116,459,4.116,460,4.116,461,4.739,462,4.739,463,4.739,464,4.739]],["title/injectables/CartService.html",[190,1.072,432,2.465]],["body/injectables/CartService.html",[3,0.124,4,0.11,5,0.11,7,0.293,12,1.114,18,0.694,19,0.015,20,0.893,23,0.722,40,0.25,43,0.805,44,0.124,45,0.04,46,0.009,47,0.009,77,1.49,78,1.49,79,2.295,80,1.808,81,2.861,82,1.737,83,1.737,87,1.173,95,2.157,96,1.854,97,1.854,98,1.999,103,1.821,106,1.808,110,1.737,116,1.737,129,0.64,167,2.106,186,1.046,190,1.331,191,1.499,195,2.454,197,2.97,201,3.717,209,1.723,211,1.723,212,1.737,218,1.321,220,1.811,388,3.865,393,3.061,419,4.27,420,3.423,422,2.997,428,3.116,432,3.061,434,2.698,465,2.997,466,3.451,467,3.451,468,4.917,469,3.451,470,3.451,471,3.451,472,3.451,473,3.451,474,3.451,475,3.451,476,3.451,477,3.451,478,4.917,479,3.451,480,3.451,481,3.451,482,1.91,483,3.451]],["title/entities/Category.html",[0,0.679,484,2.636]],["body/entities/Category.html",[0,0.944,2,1.38,3,0.146,4,0.129,5,0.129,7,0.345,8,1.333,11,4.158,12,1.115,15,4.481,18,0.777,19,0.015,20,0.914,21,1.37,22,2.366,23,0.777,26,3.042,27,2.838,30,1.435,34,2.972,40,0.22,43,0.947,44,0.146,45,0.047,46,0.01,47,0.01,58,1.845,59,2.763,66,1.493,71,1.845,91,3.458,96,1.756,291,3.665,298,3.665,406,2.703,415,3.665,484,3.665,485,3.527,486,5.426,487,4.885,488,4.061,489,4.061,490,4.061,491,4.061,492,3.279,493,5.506,494,4.061,495,4.061,496,4.061,497,2.913,498,2.703]],["title/classes/CreateAddressDto.html",[45,0.046,85,2.465]],["body/classes/CreateAddressDto.html",[1,1.936,3,0.139,4,0.124,5,0.124,7,0.329,8,1.292,9,4.713,10,5.707,13,5.984,14,5.984,17,5.299,18,0.725,19,0.014,20,0.928,21,1.278,23,0.725,40,0.213,44,0.139,45,0.061,46,0.009,47,0.009,85,3.323,91,4.223,139,1.318,499,1.762,500,6.183,501,3.034,502,6.889,503,5.337,504,3.88,505,3.88,506,5.337,507,3.88,508,3.88,509,5.337,510,3.88,511,3.88,512,5.337,513,5.337,514,5.337,515,3.88,516,3.88,517,5.337,518,5.337,519,5.337,520,3.88,521,3.88,522,7.12,523,7.12,524,3.37,525,4.432,526,5.984,527,3.37,528,3.37]],["title/classes/CreateOrderDto.html",[45,0.046,529,2.32]],["body/classes/CreateOrderDto.html",[3,0.164,4,0.145,5,0.145,7,0.387,8,1.44,18,0.766,19,0.014,20,0.885,21,1.301,23,0.738,29,2.64,40,0.182,44,0.213,45,0.068,46,0.011,47,0.011,97,1.971,104,3.27,139,1.549,153,3.876,299,2.276,393,4.12,447,3.565,448,3.035,499,2.071,525,4.85,529,3.483,530,5.688,531,3.27,532,5.748,533,5.748,534,4.559,535,5.03,536,4.559,537,4.559,538,3.565,539,4.265,540,4.559,541,4.559]],["title/classes/CreateOrderItemDto.html",[45,0.046,535,2.84]],["body/classes/CreateOrderItemDto.html",[3,0.178,4,0.158,5,0.158,7,0.421,8,1.521,18,0.725,19,0.014,20,0.881,21,1.166,23,0.661,29,2.748,40,0.198,44,0.225,45,0.072,46,0.011,47,0.011,139,1.687,153,2.908,299,2.478,393,3.091,447,5.387,448,4.586,499,2.255,525,4.926,529,2.908,530,5.387,531,3.561,532,4.312,533,4.312,535,5.193,539,3.561,542,4.965,543,4.965]],["title/classes/CreateProductDto.html",[45,0.046,544,2.465]],["body/classes/CreateProductDto.html",[3,0.131,4,0.116,5,0.116,7,0.31,8,1.239,18,0.793,19,0.014,20,0.936,21,1.399,23,0.793,29,2.787,40,0.146,44,0.131,45,0.042,46,0.009,47,0.009,59,1.959,91,3.27,96,1.66,97,2.057,139,1.241,299,2.555,487,4.62,499,1.659,525,4.932,538,4.002,544,3.186,545,6.617,546,2.856,547,5.131,548,5.131,549,5.131,550,4.62,551,4.62,552,5.131,553,5.131,554,5.118,555,5.561,556,3.653,557,4.445,558,3.653,559,3.653,560,3.653,561,3.671,562,3.653,563,3.653,564,3.653,565,3.653,566,3.653,567,3.653,568,5.118]],["title/classes/CreateUserDto.html",[45,0.046,569,2.465]],["body/classes/CreateUserDto.html",[3,0.193,4,0.171,5,0.171,7,0.456,8,1.598,18,0.752,19,0.014,20,0.947,23,0.752,44,0.193,45,0.062,46,0.012,47,0.012,53,3.398,97,1.855,274,5.585,275,4.183,499,2.442,569,4.109,570,6.469,571,4.203,572,5.375,573,5.375,574,5.375]],["title/entities/Customer.html",[0,0.679,575,1.977]],["body/entities/Customer.html",[0,0.933,2,1.355,3,0.143,4,0.127,5,0.127,7,0.338,8,1.317,12,1.104,18,0.787,19,0.015,20,0.95,21,1.388,22,2.537,23,0.787,26,3.02,27,2.811,30,1.409,34,2.944,40,0.159,43,0.93,44,0.143,45,0.046,46,0.01,47,0.01,53,2.944,54,4.839,55,4.839,56,4.839,58,3.02,59,2.936,66,2,71,3.02,287,3.625,289,3.625,291,2.655,298,2.655,575,2.715,576,3.464,577,6.189,578,3.989,579,3.989,580,3.989,581,3.989,582,3.989,583,3.989,584,3.989,585,3.989]],["title/controllers/CustomerController.html",[72,1.155,586,2.84]],["body/controllers/CustomerController.html",[3,0.104,4,0.092,5,0.092,7,0.246,12,1.312,18,0.605,19,0.015,20,0.855,21,1.141,23,0.647,40,0.23,44,0.104,45,0.033,46,0.008,47,0.008,72,0.846,74,0.846,76,1.447,77,1.312,78,1.742,79,2.113,80,1.592,81,2.781,82,1.53,83,2.031,86,1.699,87,2.193,92,1.699,95,1.879,96,1.615,97,1.615,98,1.864,100,1.699,103,1.795,106,1.066,107,1.699,110,1.025,112,2.466,114,1.805,116,1.025,121,2.162,122,2.162,124,1.522,128,1.699,129,0.538,135,1.522,136,3.572,139,0.985,150,1.38,151,1.317,152,3.405,154,1.522,158,1.522,159,1.522,164,1.522,166,1.522,167,2.113,212,1.025,218,2.2,310,3.603,315,1.805,324,3.579,326,1.805,328,3.579,329,3.579,330,3.579,331,3.227,420,3.221,426,1.805,428,2.869,429,1.93,431,1.805,440,1.93,441,1.805,442,1.605,575,3.71,586,3.106,587,2.519,588,2.519,589,2.9,590,3.761,591,4.331,592,2.9,593,2.9,594,2.9,595,2.9,596,3.227,597,2.519,598,2.268,599,2.9,600,2.9,601,2.9,602,2.9,603,2.9,604,2.9,605,2.9]],["title/modules/CustomerModule.html",[169,1.155,249,2.636]],["body/modules/CustomerModule.html",[3,0.174,4,0.154,5,0.154,19,0.014,40,0.296,44,0.174,45,0.056,46,0.011,47,0.011,74,1.804,129,0.899,169,1.987,171,2.014,172,2.014,173,2.199,174,2.199,175,2.014,176,3.093,177,3.093,181,2.808,182,2.199,183,2.104,185,2.303,186,1.467,188,2.303,249,5.128,575,2.417,586,4.884,596,5.002,597,4.205,598,3.786,606,4.205,607,4.205,608,4.205,609,4.842,610,4.842,611,4.842]],["title/injectables/CustomerService.html",[190,1.072,596,2.465]],["body/injectables/CustomerService.html",[3,0.125,4,0.111,5,0.111,7,0.296,12,1.119,18,0.697,19,0.015,20,0.896,23,0.725,40,0.251,43,0.814,44,0.125,45,0.04,46,0.009,47,0.009,77,1.501,78,1.501,79,2.307,80,1.822,81,2.865,82,1.751,83,1.751,87,1.186,95,2.166,96,1.862,97,1.862,98,2.007,103,1.83,106,1.822,110,1.751,116,1.751,129,0.648,167,2.119,186,1.057,190,1.342,191,1.516,195,2.474,197,2.985,201,3.726,209,1.742,211,1.742,212,1.751,218,1.336,220,1.832,420,3.436,428,3.131,482,1.932,575,3.307,588,4.304,590,3.031,596,3.085,598,2.729,612,3.031,613,3.49,614,3.49,615,4.956,616,3.49,617,3.49,618,3.49,619,3.49,620,3.49,621,3.49,622,3.49,623,3.49,624,3.49,625,3.49,626,3.49,627,3.49,628,3.49]],["title/entities/Discount.html",[0,0.679,629,2.32]],["body/entities/Discount.html",[0,0.892,2,1.271,3,0.134,4,0.119,5,0.119,7,0.317,8,1.26,12,1.068,18,0.819,19,0.015,20,0.896,21,1.405,22,2.643,23,0.797,26,3.345,27,2.718,29,2.076,30,1.322,34,2.847,40,0.15,43,0.872,44,0.134,45,0.043,46,0.009,47,0.009,58,2.718,59,2.819,66,1.913,71,2.718,91,3.312,287,3.505,289,3.505,295,2.683,299,1.867,401,2.88,528,5.197,561,3.732,629,3.048,630,3.249,631,5.197,632,5.984,633,5.984,634,5.984,635,3.74,636,3.74,637,3.74,638,3.74,639,3.74,640,3.74,641,3.74,642,3.74,643,3.74,644,3.74,645,3.249,646,3.74,647,3.74]],["title/controllers/DiscountController.html",[72,1.155,648,2.84]],["body/controllers/DiscountController.html",[3,0.104,4,0.092,5,0.092,7,0.246,12,1.312,18,0.605,19,0.015,20,0.855,21,1.141,23,0.647,40,0.23,44,0.104,45,0.033,46,0.008,47,0.008,72,0.846,74,0.846,76,1.447,77,1.312,78,1.742,79,2.113,80,1.592,81,2.781,82,1.53,83,2.031,86,1.699,87,2.193,92,1.699,95,1.879,96,1.615,97,1.615,98,1.864,100,1.699,103,1.795,106,1.066,107,1.699,110,1.025,112,2.466,114,1.805,116,1.025,121,2.162,122,2.162,124,1.522,128,1.699,129,0.538,135,1.522,136,3.572,139,0.985,150,1.38,151,1.317,152,3.405,154,1.522,158,1.522,159,1.522,164,1.522,166,1.522,167,2.113,212,1.025,218,2.2,310,3.603,315,1.805,324,3.579,326,1.805,328,3.579,329,3.579,330,3.579,331,3.227,420,3.221,426,1.805,428,2.869,429,1.93,431,1.805,440,1.93,441,1.805,442,1.605,629,4.354,648,3.106,649,2.519,650,2.519,651,2.9,652,3.761,653,3.761,654,2.9,655,2.9,656,2.9,657,2.9,658,3.227,659,2.519,660,2.268,661,2.9,662,2.9,663,2.9,664,2.9,665,2.9,666,2.9,667,2.9]],["title/modules/DiscountModule.html",[169,1.155,250,2.636]],["body/modules/DiscountModule.html",[3,0.174,4,0.154,5,0.154,19,0.014,40,0.296,44,0.174,45,0.056,46,0.011,47,0.011,74,1.804,129,0.899,169,1.987,171,2.014,172,2.014,173,2.199,174,2.199,175,2.014,176,3.093,177,3.093,181,2.808,182,2.199,183,2.104,185,2.303,186,1.467,188,2.303,250,5.128,629,2.836,648,4.884,658,5.002,659,4.205,660,3.786,668,4.205,669,4.205,670,4.205,671,4.842,672,4.842,673,4.842]],["title/injectables/DiscountService.html",[190,1.072,658,2.465]],["body/injectables/DiscountService.html",[3,0.125,4,0.111,5,0.111,7,0.296,12,1.119,18,0.697,19,0.015,20,0.896,23,0.725,40,0.251,43,0.814,44,0.125,45,0.04,46,0.009,47,0.009,77,1.501,78,1.501,79,2.307,80,1.822,81,2.865,82,1.751,83,1.751,87,1.186,95,2.166,96,1.862,97,1.862,98,2.007,103,1.83,106,1.822,110,1.751,116,1.751,129,0.648,167,2.119,186,1.057,190,1.342,191,1.516,195,2.474,197,2.985,201,3.726,209,1.742,211,1.742,212,1.751,218,1.336,220,1.832,420,3.436,428,3.131,482,1.932,629,3.881,650,4.304,652,3.031,658,3.085,660,2.729,674,3.031,675,3.49,676,3.49,677,4.956,678,3.49,679,3.49,680,3.49,681,3.49,682,3.49,683,3.49,684,3.49,685,3.49,686,3.49,687,3.49,688,3.49,689,3.49,690,3.49]],["title/entities/Fulfillment.html",[0,0.679,691,2.465]],["body/entities/Fulfillment.html",[0,0.952,2,1.398,3,0.148,4,0.131,5,0.131,7,0.349,8,1.345,12,1.122,18,0.793,19,0.014,20,0.954,21,1.398,22,2.697,23,0.793,26,3.059,27,2.857,30,1.454,34,2.992,40,0.164,43,0.96,44,0.148,45,0.047,46,0.01,47,0.01,58,2.523,59,2.578,66,2.042,71,2.523,153,3.684,287,3.684,289,3.684,691,3.458,692,3.574,693,5.462,694,5.462,695,6.289,696,6.289,697,4.115,698,4.115,699,4.115,700,4.115,701,4.115,702,4.115,703,4.115,704,4.115]],["title/controllers/FulfillmentController.html",[72,1.155,705,2.84]],["body/controllers/FulfillmentController.html",[3,0.104,4,0.092,5,0.092,7,0.246,12,1.312,18,0.605,19,0.015,20,0.855,21,1.141,23,0.647,40,0.23,44,0.104,45,0.033,46,0.008,47,0.008,72,0.846,74,0.846,76,1.447,77,1.312,78,1.742,79,2.113,80,1.592,81,2.781,82,1.53,83,2.031,86,1.699,87,2.193,92,1.699,95,1.879,96,1.615,97,1.615,98,1.864,100,1.699,103,1.795,106,1.066,107,1.699,110,1.025,112,2.466,114,1.805,116,1.025,121,2.162,122,2.162,124,1.522,128,1.699,129,0.538,135,1.522,136,3.572,139,0.985,150,1.38,151,1.317,152,3.405,154,1.522,158,1.522,159,1.522,164,1.522,166,1.522,167,2.113,212,1.025,218,2.2,310,3.603,315,1.805,324,3.579,326,1.805,328,3.579,329,3.579,330,3.579,331,3.227,420,3.221,426,1.805,428,2.869,429,1.93,431,1.805,440,1.93,441,1.805,442,1.605,691,4.628,705,3.106,706,2.519,707,2.519,708,2.9,709,3.761,710,4.331,711,2.9,712,2.9,713,2.9,714,2.9,715,3.227,716,2.519,717,2.268,718,2.9,719,2.9,720,2.9,721,2.9,722,2.9,723,2.9,724,2.9]],["title/modules/FulfillmentModule.html",[169,1.155,251,2.636]],["body/modules/FulfillmentModule.html",[3,0.174,4,0.154,5,0.154,19,0.014,40,0.296,44,0.174,45,0.056,46,0.011,47,0.011,74,1.804,129,0.899,169,1.987,171,2.014,172,2.014,173,2.199,174,2.199,175,2.014,176,3.093,177,3.093,181,2.808,182,2.199,183,2.104,185,2.303,186,1.467,188,2.303,251,5.128,691,3.014,705,4.884,715,5.002,716,4.205,717,3.786,725,4.205,726,4.205,727,4.205,728,4.842,729,4.842,730,4.842]],["title/injectables/FulfillmentService.html",[190,1.072,715,2.465]],["body/injectables/FulfillmentService.html",[3,0.125,4,0.111,5,0.111,7,0.296,12,1.119,18,0.697,19,0.015,20,0.896,23,0.725,40,0.251,43,0.814,44,0.125,45,0.04,46,0.009,47,0.009,77,1.501,78,1.501,79,2.307,80,1.822,81,2.865,82,1.751,83,1.751,87,1.186,95,2.166,96,1.862,97,1.862,98,2.007,103,1.83,106,1.822,110,1.751,116,1.751,129,0.648,167,2.119,186,1.057,190,1.342,191,1.516,195,2.474,197,2.985,201,3.726,209,1.742,211,1.742,212,1.751,218,1.336,220,1.832,420,3.436,428,3.131,482,1.932,691,4.125,707,4.304,709,3.031,715,3.085,717,2.729,731,3.031,732,3.49,733,3.49,734,4.956,735,3.49,736,3.49,737,3.49,738,3.49,739,3.49,740,3.49,741,3.49,742,3.49,743,3.49,744,3.49,745,3.49,746,3.49,747,3.49]],["title/injectables/JwtAuthGuard.html",[141,2.84,190,1.072]],["body/injectables/JwtAuthGuard.html",[3,0.208,4,0.185,5,0.185,19,0.014,40,0.276,44,0.208,45,0.067,46,0.012,47,0.012,129,1.075,141,4.953,190,1.87,191,2.517,345,4.53,748,5.032,749,5.032,750,4.597,751,6.906,752,5.794]],["title/classes/LoginDto.html",[45,0.046,305,2.636]],["body/classes/LoginDto.html",[3,0.194,4,0.172,5,0.172,7,0.459,8,1.605,18,0.698,19,0.014,20,0.909,21,1.23,23,0.698,40,0.216,44,0.194,45,0.062,46,0.012,47,0.012,53,3.408,139,1.839,275,4.196,305,4.411,499,2.459,525,4.769,753,4.701,754,5.413,755,5.413]],["title/entities/Order.html",[0,0.679,756,2.32]],["body/entities/Order.html",[0,0.639,2,0.81,3,0.085,4,0.076,5,0.076,7,0.202,8,0.902,12,0.819,16,2.07,18,0.792,19,0.015,20,0.878,21,1.387,22,2.282,23,0.787,26,2.357,27,2.085,29,2.576,30,0.842,34,2.183,36,1.319,40,0.207,41,1.586,42,2.873,43,0.556,44,0.134,45,0.027,46,0.007,47,0.007,53,2.183,58,2.713,59,2.897,66,1.37,71,3.277,96,1.047,104,1.709,153,2.688,287,2.688,289,2.688,299,1.86,390,3.588,392,3.986,393,2.857,395,3.986,396,3.986,397,3.986,401,3.575,406,1.586,407,2.914,415,3.749,416,1.586,539,2.672,575,2.29,629,2.688,653,2.069,756,3.04,757,1.863,758,4.589,759,5.632,760,4.589,761,4.589,762,4.589,763,5.632,764,4.153,765,3.726,766,2.382,767,2.382,768,2.382,769,2.382,770,2.382,771,2.382,772,2.382,773,2.382,774,2.382,775,3.231,776,3.726,777,2.382,778,2.382,779,2.382,780,2.382,781,2.382,782,4.404,783,2.069,784,4.892,785,2.382,786,2.382,787,2.382,788,2.382,789,4.589,790,2.069,791,3.236,792,3.236,793,3.236,794,3.236,795,2.069,796,2.382,797,2.688,798,2.382,799,2.069,800,4.589,801,2.382,802,2.382]],["title/entities/OrderAddress.html",[0,0.679,764,2.636]],["body/entities/OrderAddress.html",[0,0.81,2,1.109,3,0.117,4,0.104,5,0.104,7,0.277,8,1.144,9,3.982,12,0.99,18,0.793,19,0.015,20,0.974,21,1.398,22,2.661,23,0.793,30,1.153,40,0.13,43,0.761,44,0.117,45,0.038,46,0.008,47,0.008,50,4.821,51,4.821,52,4.821,53,2.641,54,4.341,55,4.341,56,4.341,57,4.821,58,3.384,59,3.047,66,1.737,71,3.384,527,4.821,764,3.144,803,5.943,804,2.834,805,5.551,806,3.264,807,3.264,808,3.264,809,3.264,810,3.264,811,3.264,812,3.264,813,3.264,814,3.264,815,3.264,816,3.264,817,3.264]],["title/entities/OrderItem.html",[0,0.679,775,2.465]],["body/entities/OrderItem.html",[0,0.97,2,1.436,3,0.152,4,0.135,5,0.135,7,0.359,8,1.369,12,1.137,18,0.747,19,0.015,20,0.688,21,1.317,22,1.493,23,0.747,29,2.715,30,1.493,36,3.131,40,0.255,42,3.528,43,0.986,44,0.152,45,0.049,46,0.01,47,0.01,59,2.165,66,2.079,401,3.131,446,3.305,448,4.243,449,4.984,454,4.056,492,3.442,756,4.496,775,3.521,803,5.71,818,4.226,819,5.656,820,4.226,821,5.536,822,4.226,823,4.226,824,4.226,825,4.226,826,4.226,827,4.226,828,4.226,829,4.226]],["title/controllers/OrdersController.html",[72,1.155,830,2.84]],["body/controllers/OrdersController.html",[3,0.121,4,0.108,5,0.108,7,0.287,12,1.281,18,0.651,19,0.015,20,0.889,21,1.215,23,0.689,40,0.262,44,0.121,45,0.039,46,0.009,47,0.009,72,0.987,74,0.987,76,1.689,77,1.469,78,1.874,79,2.275,80,1.782,82,1.713,83,2.186,86,1.982,87,1.647,95,2.023,96,1.739,97,1.739,98,1.984,100,1.982,103,1.911,106,1.244,107,1.982,110,1.196,112,2.695,116,1.196,118,2.939,121,2.42,122,2.42,123,2.646,124,1.776,129,0.628,135,1.776,136,3.772,139,1.15,150,1.61,151,1.537,152,3.625,154,1.776,158,1.776,159,1.776,161,2.646,164,1.776,166,1.776,426,2.107,442,1.873,529,3.991,756,4.204,830,3.477,831,2.939,832,5.665,833,2.939,834,3.384,835,3.384,836,3.384,837,3.384,838,4.777,839,3.384,840,3.527,841,2.939,842,2.107,843,3.791,844,2.107,845,3.384,846,3.384,847,3.384,848,3.384,849,3.384,850,3.384,851,3.384]],["title/modules/OrdersModule.html",[169,1.155,252,2.636]],["body/modules/OrdersModule.html",[3,0.161,4,0.143,5,0.143,19,0.015,40,0.31,44,0.161,45,0.052,46,0.01,47,0.01,74,1.715,129,0.831,169,1.915,171,1.864,172,1.864,173,2.035,174,2.035,175,1.864,176,2.981,177,2.035,181,2.671,182,2.035,183,1.947,185,2.132,186,1.357,188,2.797,252,5.109,254,4.349,258,3.504,416,2.982,492,2.035,756,2.625,764,3.913,775,3.66,790,3.892,830,4.706,840,4.622,841,3.892,852,3.892,853,4.481,854,3.892,855,4.481,856,4.481,857,3.892,858,5.106,859,4.481,860,4.481,861,2.48,862,3.892]],["title/injectables/OrdersService.html",[190,1.072,840,2.465]],["body/injectables/OrdersService.html",[3,0.096,4,0.085,5,0.085,7,0.226,12,1.195,18,0.624,19,0.015,20,0.835,23,0.657,40,0.268,43,0.621,44,0.096,45,0.031,46,0.007,47,0.007,77,1.23,78,1.23,79,2.024,80,1.493,81,2.739,82,1.435,83,1.435,87,1.38,95,1.938,96,1.666,97,1.666,98,1.796,103,1.606,106,1.493,110,1.435,116,1.435,129,0.494,153,3.225,167,2.388,186,0.807,190,1.099,191,1.157,195,2.027,197,3.09,201,3.494,208,1.91,209,1.329,211,2.456,212,2.473,218,1.554,220,2.131,235,3.175,393,3.064,407,2.082,416,1.772,448,1.772,449,2.082,482,2.247,492,2.692,529,3.659,551,3.175,575,1.329,756,3.923,775,3.064,782,3.175,795,2.313,833,3.527,838,4.457,840,2.528,842,1.658,843,3.175,844,1.658,857,2.313,858,2.313,861,3.596,863,2.313,864,2.663,865,4.922,866,2.663,867,4.06,868,2.663,869,2.663,870,2.663,871,2.663,872,2.663,873,2.663,874,2.663,875,2.663,876,4.06,877,2.663,878,2.663,879,2.663,880,4.922,881,2.663,882,2.663,883,2.663,884,4.06,885,2.663,886,2.663,887,2.313,888,2.663,889,2.663,890,4.06,891,4.06,892,2.663,893,2.313,894,2.663,895,2.663,896,2.663,897,2.663,898,2.663,899,2.663,900,2.663,901,2.663]],["title/entities/Payment.html",[0,0.679,797,2.32]],["body/entities/Payment.html",[0,0.959,2,1.413,3,0.149,4,0.133,5,0.133,7,0.353,8,1.355,12,1.128,18,0.795,19,0.014,20,0.941,21,1.401,22,2.668,23,0.795,26,3.072,27,2.872,29,2.232,30,1.469,34,3.008,40,0.166,43,0.97,44,0.149,45,0.048,46,0.01,47,0.01,58,1.889,59,2.142,66,2.057,71,1.889,153,3.704,287,3.704,289,3.704,390,4.944,401,3.097,631,5.492,693,5.492,694,5.492,797,3.277,902,3.612,903,4.159,904,4.159,905,4.159,906,4.159,907,4.159,908,4.159,909,4.159,910,4.159]],["title/controllers/PaymentController.html",[72,1.155,911,2.84]],["body/controllers/PaymentController.html",[3,0.104,4,0.092,5,0.092,7,0.246,12,1.312,18,0.605,19,0.015,20,0.855,21,1.141,23,0.647,40,0.23,44,0.104,45,0.033,46,0.008,47,0.008,72,0.846,74,0.846,76,1.447,77,1.312,78,1.742,79,2.113,80,1.592,81,2.781,82,1.53,83,2.031,86,1.699,87,2.193,92,1.699,95,1.879,96,1.615,97,1.615,98,1.864,100,1.699,103,1.795,106,1.066,107,1.699,110,1.025,112,2.466,114,1.805,116,1.025,121,2.162,122,2.162,124,1.522,128,1.699,129,0.538,135,1.522,136,3.572,139,0.985,150,1.38,151,1.317,152,3.405,154,1.522,158,1.522,159,1.522,164,1.522,166,1.522,167,2.113,212,1.025,218,2.2,310,3.603,315,1.805,324,3.579,326,1.805,328,3.579,329,3.579,330,3.579,331,3.227,420,3.221,426,1.805,428,2.869,429,1.93,431,1.805,440,1.93,441,1.805,442,1.605,797,4.354,799,3.761,911,3.106,912,2.519,913,2.519,914,2.9,915,3.761,916,2.9,917,2.9,918,2.9,919,2.9,920,3.227,921,2.519,922,2.268,923,2.9,924,2.9,925,2.9,926,2.9,927,2.9,928,2.9,929,2.9]],["title/modules/PaymentModule.html",[169,1.155,253,2.636]],["body/modules/PaymentModule.html",[3,0.174,4,0.154,5,0.154,19,0.014,40,0.296,44,0.174,45,0.056,46,0.011,47,0.011,74,1.804,129,0.899,169,1.987,171,2.014,172,2.014,173,2.199,174,2.199,175,2.014,176,3.093,177,3.093,181,2.808,182,2.199,183,2.104,185,2.303,186,1.467,188,2.303,253,5.128,797,2.836,911,4.884,920,5.002,921,4.205,922,3.786,930,4.205,931,4.205,932,4.205,933,4.842,934,4.842,935,4.842]],["title/injectables/PaymentService.html",[190,1.072,920,2.465]],["body/injectables/PaymentService.html",[3,0.125,4,0.111,5,0.111,7,0.296,12,1.119,18,0.697,19,0.015,20,0.896,23,0.725,40,0.251,43,0.814,44,0.125,45,0.04,46,0.009,47,0.009,77,1.501,78,1.501,79,2.307,80,1.822,81,2.865,82,1.751,83,1.751,87,1.186,95,2.166,96,1.862,97,1.862,98,2.007,103,1.83,106,1.822,110,1.751,116,1.751,129,0.648,167,2.119,186,1.057,190,1.342,191,1.516,195,2.474,197,2.985,201,3.726,209,1.742,211,1.742,212,1.751,218,1.336,220,1.832,420,3.436,428,3.131,482,1.932,797,3.881,913,4.304,915,3.031,920,3.085,922,2.729,936,3.031,937,3.49,938,3.49,939,4.956,940,3.49,941,3.49,942,3.49,943,3.49,944,3.49,945,3.49,946,3.49,947,3.49,948,3.49,949,3.49,950,3.49,951,3.49,952,3.49]],["title/entities/Product.html",[0,0.679,492,1.799]],["body/entities/Product.html",[0,0.69,2,0.894,3,0.094,4,0.084,5,0.084,7,0.223,8,0.974,11,3.252,12,0.872,15,3.504,18,0.794,19,0.015,20,0.896,21,1.401,22,2.416,23,0.794,26,2.485,27,2.219,29,2.48,30,0.93,34,2.324,36,1.456,40,0.236,42,2.227,43,0.614,44,0.094,45,0.03,46,0.007,47,0.007,58,1.195,59,2.908,66,0.967,71,2.219,91,2.704,96,1.373,291,1.751,295,2.886,298,1.751,299,2.008,401,2.227,406,3.252,415,3.642,454,1.887,484,4.552,487,3.82,492,2.219,498,1.751,547,4.243,548,4.243,549,4.243,550,3.82,551,3.82,552,4.243,553,4.243,557,3.495,561,2.886,821,4.752,953,2.285,954,4.886,955,4.243,956,4.886,957,2.631,958,4.024,959,2.631,960,2.631,961,2.631,962,2.285,963,2.631,964,2.631,965,2.631,966,3.642,967,4.024,968,4.024,969,5.4,970,2.631,971,2.631,972,2.631,973,2.631,974,3.871,975,4.024,976,2.631,977,2.631,978,2.631,979,2.631,980,2.631,981,4.138,982,4.024,983,2.631,984,2.631,985,2.285,986,2.631,987,2.631,988,2.285,989,3.495,990,2.285]],["title/entities/ProductImage.html",[0,0.679,966,2.636]],["body/entities/ProductImage.html",[0,1.012,2,1.531,3,0.162,4,0.144,5,0.144,7,0.382,8,1.429,12,1.174,18,0.735,19,0.015,20,0.905,21,1.296,22,2.467,23,0.735,30,1.592,36,2.495,40,0.236,42,3.267,43,1.051,44,0.162,45,0.052,46,0.01,47,0.01,58,2.047,59,2.259,66,1.657,71,2.047,492,3.531,497,3.232,498,3,966,3.928,969,5.126,991,6.295,992,3.914,993,6.581,994,6.581,995,4.507,996,4.507,997,5.902,998,5.902,999,4.507,1000,4.507]],["title/controllers/ProductsController.html",[72,1.155,1001,2.84]],["body/controllers/ProductsController.html",[3,0.132,4,0.117,5,0.117,7,0.312,12,1.249,18,0.676,19,0.015,20,0.907,21,1.254,23,0.711,40,0.27,44,0.132,45,0.042,46,0.009,47,0.009,72,1.073,74,1.073,76,1.836,77,1.558,78,1.558,79,2.361,80,1.891,82,1.817,83,1.817,95,2.099,96,1.805,97,1.805,98,2.047,103,1.972,106,1.352,110,1.3,112,1.75,116,1.3,121,2.96,122,2.567,124,1.931,129,0.683,135,1.931,139,1.25,150,1.75,151,1.671,154,1.931,158,2.7,159,1.931,164,2.7,166,1.931,431,2.29,441,3.202,442,2.036,486,3.195,544,4.36,842,2.29,844,2.29,861,3.283,1001,3.689,1002,3.195,1003,3.195,1004,3.679,1005,3.679,1006,3.679,1007,3.679,1008,4.881,1009,3.679,1010,3.195,1011,4.022,1012,3.679,1013,3.679,1014,3.679,1015,3.679,1016,3.679,1017,3.679,1018,3.679]],["title/modules/ProductsModule.html",[169,1.155,254,2.32]],["body/modules/ProductsModule.html",[3,0.161,4,0.143,5,0.143,19,0.015,40,0.311,44,0.161,45,0.052,46,0.01,47,0.01,74,1.719,129,0.834,169,1.917,171,1.87,172,1.87,173,2.041,174,2.041,175,1.87,176,2.985,177,2.985,181,2.676,182,2.041,183,1.952,185,2.138,186,1.361,188,2.138,254,4.435,484,3.92,492,2.041,861,4.4,966,3.92,974,3.667,981,3.92,985,3.903,1001,4.713,1010,3.903,1019,3.903,1020,3.903,1021,3.903,1022,4.494,1023,4.494,1024,3.903,1025,4.494,1026,4.494,1027,4.494,1028,4.494,1029,4.494]],["title/injectables/ProductsService.html",[190,1.072,861,2.192]],["body/injectables/ProductsService.html",[3,0.119,4,0.106,5,0.106,7,0.282,12,1.209,18,0.685,19,0.015,20,0.886,23,0.713,40,0.271,43,0.776,44,0.119,45,0.038,46,0.008,47,0.008,77,1.451,78,1.451,79,2.257,80,1.761,81,2.845,82,1.692,83,1.692,87,1.13,95,2.127,96,1.828,97,1.828,98,1.971,103,1.791,106,1.761,110,1.692,116,1.692,129,0.617,167,2.257,186,1.008,190,1.296,191,1.445,195,2.39,197,2.92,201,3.687,208,2.386,209,1.66,211,1.66,212,2.169,218,1.273,220,1.746,482,2.651,492,3.171,544,4.05,842,2.071,844,2.071,861,2.651,887,2.889,1003,4.159,1008,4.756,1011,3.744,1024,2.889,1030,2.889,1031,3.326,1032,3.326,1033,4.789,1034,3.326,1035,3.326,1036,3.326,1037,3.326,1038,3.326,1039,3.326,1040,3.326,1041,4.789,1042,3.326,1043,3.326,1044,3.326,1045,3.326]],["title/classes/RegisterDto.html",[45,0.046,312,2.636]],["body/classes/RegisterDto.html",[3,0.183,4,0.163,5,0.163,7,0.434,8,1.549,16,2.552,18,0.735,19,0.014,20,0.935,21,1.296,23,0.735,40,0.204,44,0.183,45,0.059,46,0.011,47,0.011,53,3.322,139,1.737,275,4.09,288,5.008,299,2.551,312,4.258,499,2.322,525,4.785,538,3.997,1046,4.439,1047,5.111,1048,5.111,1049,5.111]],["title/entities/Review.html",[0,0.679,974,2.465]],["body/entities/Review.html",[0,0.959,2,1.413,3,0.149,4,0.133,5,0.133,7,0.353,8,1.355,11,4.208,12,1.128,16,3.051,18,0.765,19,0.015,20,0.823,21,1.349,22,1.469,23,0.765,26,2.542,27,2.872,29,2.232,30,1.469,36,3.097,40,0.253,41,2.768,42,3.5,43,0.97,44,0.149,45,0.048,46,0.01,47,0.01,48,3.612,66,1.529,454,2.983,492,3.475,497,2.983,498,2.768,962,3.612,974,3.483,988,3.612,990,3.612,1050,3.612,1051,6.323,1052,6.323,1053,4.159,1054,4.159,1055,4.159,1056,5.595,1057,4.159,1058,4.159,1059,5.595,1060,4.159,1061,4.159,1062,4.159]],["title/classes/UpdateAddressDto.html",[45,0.046,117,2.636]],["body/classes/UpdateAddressDto.html",[3,0.208,4,0.185,5,0.185,19,0.014,40,0.276,44,0.208,45,0.067,46,0.012,47,0.012,78,1.755,85,3.607,117,4.597,133,4.53,139,1.969,499,2.632,501,4.53,750,4.597,1063,5.032,1064,6.906,1065,4.156]],["title/classes/UpdateOrderDto.html",[45,0.046,838,2.636]],["body/classes/UpdateOrderDto.html",[3,0.208,4,0.185,5,0.185,19,0.014,40,0.276,44,0.208,45,0.067,46,0.012,47,0.012,78,1.755,139,1.969,499,2.632,529,3.394,531,4.156,750,4.597,838,4.597,843,4.53,1065,4.156,1066,5.032,1067,6.906]],["title/classes/UpdateProductDto.html",[45,0.046,1008,2.636]],["body/classes/UpdateProductDto.html",[3,0.208,4,0.185,5,0.185,19,0.014,40,0.276,44,0.208,45,0.067,46,0.012,47,0.012,78,1.755,139,1.969,499,2.632,544,3.607,546,4.53,750,4.597,1008,4.597,1011,4.53,1065,4.156,1068,5.032,1069,6.906]],["title/classes/UpdateUserDto.html",[45,0.046,1070,2.636]],["body/classes/UpdateUserDto.html",[3,0.19,4,0.168,5,0.168,7,0.448,8,1.581,18,0.556,19,0.014,20,0.795,23,0.556,40,0.261,44,0.19,45,0.061,46,0.012,47,0.012,78,1.601,97,1.835,212,2.308,275,4.456,499,2.4,569,3.29,571,4.132,750,4.347,1065,5.084,1070,4.347,1071,5.672,1072,6.531,1073,5.284,1074,5.284,1075,4.59,1076,4.59,1077,4.132]],["title/entities/User.html",[0,0.679,16,1.58]],["body/entities/User.html",[0,0.436,1,3.061,2,0.864,3,0.091,4,0.081,5,0.081,7,0.216,8,0.949,11,3.182,12,0.853,15,3.429,16,1.563,18,0.809,19,0.015,20,0.919,21,1.402,22,2.584,23,0.795,26,3.14,27,2.172,30,0.898,34,2.274,40,0.191,43,0.593,44,0.141,45,0.029,46,0.007,47,0.007,53,2.274,58,2.785,59,2.926,66,1.44,71,3.14,101,4.152,104,1.823,274,3.738,288,3.429,291,1.691,295,2.81,298,1.691,299,2.682,406,2.608,415,3.182,550,3.738,555,4.666,561,3.853,575,1.955,783,4.152,784,5.041,955,4.152,974,3.978,1078,1.987,1079,4.781,1080,4.781,1081,4.781,1082,4.781,1083,4.781,1084,4.781,1085,4.781,1086,4.781,1087,4.781,1088,3.918,1089,2.541,1090,2.541,1091,2.541,1092,2.541,1093,2.541,1094,2.541,1095,2.541,1096,2.541,1097,2.541,1098,3.918,1099,2.541,1100,2.541,1101,2.541,1102,2.541,1103,2.541,1104,2.541,1105,3.918,1106,2.541,1107,5.041,1108,2.541,1109,2.541,1110,2.541,1111,2.541,1112,2.541,1113,3.403,1114,3.403,1115,2.541,1116,2.541,1117,2.541,1118,2.541,1119,2.541]],["title/controllers/UsersController.html",[72,1.155,1120,2.84]],["body/controllers/UsersController.html",[3,0.134,4,0.119,5,0.119,7,0.317,12,1.255,18,0.68,19,0.015,20,0.91,21,1.261,23,0.715,40,0.258,44,0.134,45,0.043,46,0.009,47,0.009,72,1.089,74,1.089,76,1.862,77,1.574,78,1.574,79,2.376,80,1.91,82,1.836,83,1.836,95,2.113,96,1.816,97,1.816,98,2.058,103,1.982,106,1.372,110,1.318,112,1.775,116,1.318,121,2.983,122,2.593,123,2.918,124,1.959,129,0.692,150,1.775,151,1.695,154,1.959,158,2.727,159,1.959,161,4.062,164,2.727,166,1.959,442,2.065,569,4.379,842,2.323,844,2.323,1070,4.898,1077,4.062,1120,3.726,1121,3.241,1122,3.731,1123,3.241,1124,3.731,1125,3.731,1126,3.731,1127,3.731,1128,3.731,1129,3.721,1130,3.241,1131,3.731,1132,3.731,1133,3.731,1134,3.731,1135,3.731,1136,3.731]],["title/modules/UsersModule.html",[169,1.155,255,2.636]],["body/modules/UsersModule.html",[3,0.172,4,0.152,5,0.152,16,1.908,19,0.014,40,0.302,44,0.172,45,0.055,46,0.011,47,0.011,74,1.789,129,0.888,169,1.975,171,1.99,172,1.99,173,2.173,174,2.173,175,1.99,176,3.076,177,2.173,181,2.786,182,2.173,183,2.078,185,2.275,186,1.449,188,2.918,254,4.426,255,5.179,258,3.74,1120,4.856,1129,4.704,1130,4.154,1137,4.154,1138,4.154,1139,4.783,1140,4.783,1141,4.783,1142,4.154,1143,4.783]],["title/injectables/UsersService.html",[190,1.072,1129,2.465]],["body/injectables/UsersService.html",[3,0.114,4,0.101,5,0.101,7,0.27,12,1.19,16,2.746,18,0.672,19,0.015,20,0.876,23,0.702,40,0.275,43,0.741,44,0.114,45,0.037,46,0.008,47,0.008,77,1.403,78,1.403,79,2.209,80,1.703,81,2.824,82,1.637,83,1.637,87,1.08,95,2.088,96,1.795,97,1.795,98,1.935,103,1.753,106,1.703,110,1.637,112,1.511,116,1.637,129,0.59,167,2.452,186,0.963,190,1.254,191,1.38,195,2.312,197,2.858,201,3.649,208,2.279,209,1.586,211,1.586,212,2.123,218,1.216,220,1.668,367,3.622,371,4.023,482,2.564,569,3.977,842,1.978,844,1.978,1070,4.696,1077,3.622,1123,4.023,1129,2.884,1142,2.76,1144,2.76,1145,3.177,1146,3.177,1147,4.632,1148,3.177,1149,3.177,1150,3.177,1151,3.177,1152,3.177,1153,3.177,1154,3.177,1155,3.177,1156,4.632,1157,3.177,1158,4.632,1159,3.177,1160,3.177,1161,3.177,1162,4.632,1163,3.177,1164,3.177,1165,3.177]],["title/entities/Variant.html",[0,0.679,981,2.636]],["body/entities/Variant.html",[0,0.995,2,1.493,3,0.158,4,0.14,5,0.14,7,0.373,8,1.405,12,1.159,18,0.804,19,0.015,20,0.898,21,1.334,22,2.54,23,0.756,29,2.315,30,1.552,36,2.431,40,0.232,42,3.212,43,1.024,44,0.158,45,0.051,46,0.01,47,0.01,66,1.615,401,2.431,492,3.513,497,3.15,498,2.924,645,5.04,981,3.862,989,3.815,1166,3.815,1167,6.498,1168,5.081,1169,4.393,1170,4.393,1171,5.803,1172,4.393,1173,4.393,1174,4.393,1175,4.393,1176,4.393,1177,4.393,1178,4.393,1179,4.393,1180,4.393]],["title/coverage.html",[1181,4.232]],["body/coverage.html",[0,1.303,1,2.014,5,0.084,6,2.293,16,1.053,18,0.278,19,0.015,45,0.082,46,0.007,47,0.007,49,2.293,72,2.072,73,1.894,75,2.293,85,1.644,87,0.897,117,1.757,130,1.644,141,1.894,144,2.064,175,1.098,190,1.95,192,2.293,235,6.417,236,1.894,237,2.293,240,1.644,281,2.293,285,1.644,286,2.293,300,1.894,301,2.293,305,1.757,312,1.757,316,1.644,352,2.293,357,2.293,388,1.546,389,2.293,405,1.757,417,1.894,418,2.293,432,1.644,445,2.293,446,3.154,465,2.293,484,1.757,485,2.293,492,1.199,500,2.293,501,3.154,529,1.546,530,3.154,531,3.511,535,1.894,544,1.644,545,2.293,546,3.154,569,1.644,570,2.293,571,3.154,575,1.318,576,2.293,586,1.894,587,2.293,596,1.644,612,2.293,629,1.546,630,2.293,648,1.894,649,2.293,658,1.644,674,2.293,691,1.644,692,2.293,705,1.894,706,2.293,715,1.644,731,2.293,748,2.293,749,2.293,753,2.293,756,1.546,757,2.064,764,1.757,775,1.644,797,1.546,803,3.154,804,2.293,830,1.894,831,2.293,838,1.757,840,1.644,861,1.461,863,2.293,902,2.293,911,1.894,912,2.293,920,1.644,936,2.293,953,2.293,966,1.757,974,1.644,981,1.757,991,2.293,992,2.293,1001,1.894,1002,2.293,1008,1.757,1030,2.293,1046,2.293,1050,2.293,1063,2.293,1066,2.293,1068,2.293,1070,1.757,1071,2.293,1078,2.064,1120,1.894,1121,2.293,1129,1.644,1144,2.293,1166,2.293,1181,2.064,1182,2.293,1183,2.64,1184,2.64,1185,6.984,1186,6.845,1187,7.818,1188,4.896,1189,4.896,1190,4.034,1191,2.293,1192,2.293,1193,4.034,1194,2.293,1195,2.64,1196,2.64,1197,2.64,1198,2.64]],["title/dependencies.html",[172,1.982,1199,2.869]],["body/dependencies.html",[19,0.015,43,1.177,45,0.073,46,0.011,47,0.011,129,0.936,139,1.714,172,2.099,186,1.528,307,4.382,343,3.945,345,3.945,367,3.945,524,4.382,1075,4.382,1076,4.382,1200,6.941,1201,5.045,1202,6.345,1203,5.045,1204,5.045,1205,5.045,1206,6.345,1207,5.045,1208,5.045,1209,6.345,1210,5.045,1211,5.045,1212,5.045,1213,6.345,1214,5.045,1215,5.045,1216,5.045,1217,5.045,1218,5.045,1219,5.045,1220,5.045,1221,5.045,1222,5.045,1223,5.045,1224,5.045,1225,5.045,1226,5.045]],["title/miscellaneous/enumerations.html",[1227,2.057,1228,4.138]],["body/miscellaneous/enumerations.html",[7,0.462,19,0.014,46,0.012,47,0.012,539,4.774,575,3.322,757,4.262,782,5.204,791,5.781,792,5.781,793,5.781,794,5.781,1078,4.262,1107,5.781,1113,5.781,1114,5.781,1168,6.24,1227,3.393,1228,4.734,1229,5.45,1230,5.45]],["title/miscellaneous/functions.html",[1227,2.057,1231,4.138]],["body/miscellaneous/functions.html",[7,0.527,19,0.013,46,0.013,47,0.013,175,3.159,1194,5.392,1227,3.865,1231,5.392,1232,6.209]],["title/index.html",[7,0.28,1233,3.303,1234,3.303]],["body/index.html",[4,0.103,19,0.014,46,0.008,47,0.008,91,1.788,183,2.914,197,1.536,221,5.825,353,4.072,526,5.259,862,2.805,893,2.805,1181,2.525,1182,4.072,1235,3.23,1236,3.23,1237,5.519,1238,4.688,1239,3.23,1240,3.23,1241,3.23,1242,3.23,1243,4.688,1244,5.519,1245,3.23,1246,3.23,1247,6.055,1248,3.23,1249,7.088,1250,3.23,1251,6.92,1252,3.23,1253,3.23,1254,3.23,1255,4.688,1256,3.23,1257,3.23,1258,5.519,1259,4.688,1260,3.23,1261,3.23,1262,3.23,1263,3.23,1264,3.23,1265,6.055,1266,7.088,1267,6.707,1268,3.23,1269,4.688,1270,3.23,1271,3.23,1272,3.23,1273,3.23,1274,3.23,1275,4.688,1276,6.055,1277,4.688,1278,3.23,1279,3.23,1280,4.688,1281,6.43,1282,6.055,1283,3.23,1284,4.688,1285,3.23,1286,3.23,1287,3.23,1288,3.23,1289,6.055,1290,3.23,1291,3.23,1292,3.23,1293,3.23,1294,3.23,1295,4.688,1296,3.23,1297,3.23,1298,3.23,1299,3.23,1300,3.23,1301,4.688,1302,3.23,1303,3.23,1304,3.23,1305,4.688,1306,3.23,1307,3.23,1308,5.259,1309,4.688,1310,3.23,1311,3.23,1312,3.23,1313,3.23,1314,3.23,1315,3.23,1316,3.23,1317,3.23,1318,4.688,1319,3.23,1320,3.23,1321,3.23,1322,3.23,1323,5.519,1324,3.23,1325,3.23,1326,3.23,1327,3.23,1328,3.23,1329,3.23,1330,4.688,1331,3.23,1332,3.23,1333,3.23,1334,3.23,1335,3.23,1336,4.688,1337,3.23,1338,3.23,1339,3.23,1340,4.688,1341,4.688,1342,3.23,1343,3.23,1344,3.23,1345,3.23,1346,3.23,1347,3.23,1348,3.23,1349,3.23,1350,3.23,1351,3.23,1352,3.23,1353,2.805,1354,3.23,1355,3.23,1356,3.23,1357,3.23,1358,3.23,1359,3.23,1360,2.805]],["title/modules.html",[171,2.252]],["body/modules.html",[19,0.011,46,0.011,47,0.011,170,3.47,171,2.169,243,3.739,247,3.47,248,3.47,249,3.47,250,3.47,251,3.47,252,3.47,253,3.47,254,3.054,255,3.47,1308,7.015,1361,8.078,1362,8.078,1363,8.078]],["title/overview.html",[1364,4.701]],["body/overview.html",[2,1.104,19,0.014,46,0.008,47,0.008,74,0.948,130,4.316,169,0.948,170,4.473,171,1.352,172,1.352,173,1.476,174,1.476,175,1.352,176,1.476,177,1.476,178,2.823,179,2.823,180,2.823,181,2.139,182,1.476,183,1.412,191,1.412,240,3.448,243,5.74,244,2.823,245,2.823,246,2.823,247,4.473,248,4.473,249,4.473,250,4.473,251,4.473,252,4.614,253,4.473,254,4.159,255,4.614,316,4.316,336,2.823,337,2.823,338,2.823,432,4.316,458,2.823,459,2.823,460,2.823,499,1.476,596,4.316,606,2.823,607,2.823,608,2.823,658,4.316,668,2.823,669,2.823,670,2.823,715,4.316,725,2.823,726,2.823,727,2.823,840,3.448,852,2.823,854,2.823,861,3.837,920,4.316,930,2.823,931,2.823,932,2.823,1019,2.823,1020,2.823,1021,2.823,1129,3.448,1137,2.823,1138,2.823,1364,2.823,1365,5.538,1366,3.25,1367,3.25]],["title/properties.html",[8,1.154,1199,2.869]],["body/properties.html",[8,1.485,19,0.014,46,0.013,47,0.013,91,3.396,1353,5.329,1360,5.329,1368,6.136,1369,6.136,1370,6.136]],["title/miscellaneous/variables.html",[1227,2.057,1371,4.138]],["body/miscellaneous/variables.html",[7,0.488,16,2.294,19,0.014,46,0.012,47,0.012,103,1.678,144,5.376,212,2.032,299,2.871,310,3.369,1168,4.497,1191,4.995,1192,5.972,1227,3.581,1371,4.995,1372,5.751,1373,5.751,1374,5.751,1375,5.751,1376,5.751,1377,5.751,1378,5.751,1379,5.751]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":235,"title":{},"body":{"injectables/AddressService.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1369,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["0.3.25",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":48,"title":{"entities/Address-1.html":{}},"body":{"entities/Review.html":{}}}],["10",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["100",{"_index":1179,"title":{},"body":{"entities/Variant.html":{}}}],["11",{"_index":1365,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1367,"title":{},"body":{"overview.html":{}}}],["123",{"_index":512,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["12345",{"_index":517,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["18",{"_index":1366,"title":{},"body":{"overview.html":{}}}],["1h",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["2.1.0",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":102,"title":{},"body":{"controllers/AddressController.html":{}}}],["201",{"_index":90,"title":{},"body":{"controllers/AddressController.html":{}}}],["204",{"_index":113,"title":{},"body":{"controllers/AddressController.html":{}}}],["4.0.1",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1061,"title":{},"body":{"entities/Review.html":{}}}],["5.0.1",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1180,"title":{},"body":{"entities/Variant.html":{}}}],["5432",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["54321",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["6.0.0",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["8.16.3",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":1,"title":{"entities/Address.html":{},"entities/Address-1.html":{}},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"classes/CreateAddressDto.html":{},"entities/User.html":{},"coverage.html":{}}}],["address'})@isstring()@isnotempty",{"_index":515,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.controller",{"_index":187,"title":{},"body":{"modules/AddressModule.html":{}}}],["address.dto",{"_index":133,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/UpdateAddressDto.html":{}}}],["address.dto.ts",{"_index":501,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["address.dto.ts:13",{"_index":505,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:18",{"_index":511,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:23",{"_index":521,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:28",{"_index":508,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:8",{"_index":516,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.entity",{"_index":790,"title":{},"body":{"entities/Order.html":{},"modules/OrdersModule.html":{}}}],["address.entity.ts",{"_index":804,"title":{},"body":{"entities/OrderAddress.html":{},"coverage.html":{}}}],["address.entity.ts:12",{"_index":814,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:15",{"_index":809,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:18",{"_index":806,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:21",{"_index":807,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:24",{"_index":808,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:27",{"_index":810,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:30",{"_index":817,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:33",{"_index":816,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:36",{"_index":815,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:39",{"_index":811,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:6",{"_index":813,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.entity.ts:9",{"_index":812,"title":{},"body":{"entities/OrderAddress.html":{}}}],["address.service",{"_index":131,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{}}}],["address.user",{"_index":1088,"title":{},"body":{"entities/User.html":{}}}],["address/address.module",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["address/entities/address.entity",{"_index":1112,"title":{},"body":{"entities/User.html":{}}}],["address_1",{"_index":50,"title":{},"body":{"entities/Address-1.html":{},"entities/OrderAddress.html":{}}}],["address_2",{"_index":51,"title":{},"body":{"entities/Address-1.html":{},"entities/OrderAddress.html":{}}}],["addresscontroller",{"_index":73,"title":{"controllers/AddressController.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"coverage.html":{}}}],["addresses",{"_index":101,"title":{},"body":{"controllers/AddressController.html":{},"entities/User.html":{}}}],["addressmodule",{"_index":170,"title":{"modules/AddressModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["addressrepository",{"_index":199,"title":{},"body":{"injectables/AddressService.html":{}}}],["addressservice",{"_index":130,"title":{"injectables/AddressService.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"coverage.html":{},"overview.html":{}}}],["admin",{"_index":1113,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["allowing",{"_index":1296,"title":{},"body":{"index.html":{}}}],["alttext",{"_index":993,"title":{},"body":{"entities/ProductImage.html":{}}}],["amazing",{"_index":1346,"title":{},"body":{"index.html":{}}}],["amount",{"_index":631,"title":{},"body":{"entities/Discount.html":{},"entities/Payment.html":{}}}],["anytown",{"_index":503,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["apibearerauth",{"_index":138,"title":{},"body":{"controllers/AddressController.html":{}}}],["apioperation",{"_index":136,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{}}}],["apiproperty",{"_index":525,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty({default",{"_index":538,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty({example",{"_index":502,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["apiproperty({required",{"_index":554,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiproperty({type",{"_index":536,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["apiresponse",{"_index":137,"title":{},"body":{"controllers/AddressController.html":{}}}],["apitags",{"_index":135,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{}}}],["apitags('address",{"_index":147,"title":{},"body":{"controllers/AddressController.html":{}}}],["apitags('auth",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('cart",{"_index":435,"title":{},"body":{"controllers/CartController.html":{}}}],["apitags('customer",{"_index":599,"title":{},"body":{"controllers/CustomerController.html":{}}}],["apitags('discount",{"_index":661,"title":{},"body":{"controllers/DiscountController.html":{}}}],["apitags('fulfillment",{"_index":718,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["apitags('orders",{"_index":845,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apitags('payment",{"_index":923,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apitags('products",{"_index":1012,"title":{},"body":{"controllers/ProductsController.html":{}}}],["app.controller",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":241,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":236,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1267,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1243,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":243,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":240,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":892,"title":{},"body":{"injectables/OrdersService.html":{}}}],["async",{"_index":81,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["attempting",{"_index":225,"title":{},"body":{"injectables/AddressService.html":{}}}],["auth",{"_index":285,"title":{"entities/Auth.html":{}},"body":{"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["auth.controller",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":143,"title":{},"body":{"controllers/AddressController.html":{}}}],["auth.guard.ts",{"_index":749,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorators/get",{"_index":145,"title":{},"body":{"controllers/AddressController.html":{}}}],["auth/guards/jwt",{"_index":142,"title":{},"body":{"controllers/AddressController.html":{}}}],["authcontroller",{"_index":300,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":88,"title":{},"body":{"controllers/AddressController.html":{}}}],["authguard",{"_index":752,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":751,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":247,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1353,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authrepository",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":316,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":167,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1284,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1347,"title":{},"body":{"index.html":{}}}],["based",{"_index":1279,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":1157,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(updateuserdto.password",{"_index":1163,"title":{},"body":{"injectables/UsersService.html":{}}}],["before",{"_index":224,"title":{},"body":{"injectables/AddressService.html":{}}}],["belongs",{"_index":230,"title":{},"body":{"injectables/AddressService.html":{}}}],["billing_address",{"_index":758,"title":{},"body":{"entities/Order.html":{}}}],["billing_address_id",{"_index":759,"title":{},"body":{"entities/Order.html":{}}}],["board",{"_index":1339,"title":{},"body":{"index.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":561,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":175,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":547,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["browse",{"_index":1363,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1361,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1238,"title":{},"body":{"index.html":{}}}],["ca",{"_index":509,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["cancelled",{"_index":794,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["cart",{"_index":388,"title":{"entities/Cart.html":{}},"body":{"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cart.controller",{"_index":462,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.entity",{"_index":457,"title":{},"body":{"entities/CartItem.html":{}}}],["cart.items",{"_index":450,"title":{},"body":{"entities/CartItem.html":{}}}],["cart.service",{"_index":433,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["cartcontroller",{"_index":417,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartdata",{"_index":422,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["cartitem",{"_index":405,"title":{"entities/CartItem.html":{}},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartmodule",{"_index":248,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartrepository",{"_index":468,"title":{},"body":{"injectables/CartService.html":{}}}],["carts",{"_index":423,"title":{},"body":{"controllers/CartController.html":{}}}],["cartservice",{"_index":432,"title":{"injectables/CartService.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{},"overview.html":{}}}],["cascade",{"_index":969,"title":{},"body":{"entities/Product.html":{},"entities/ProductImage.html":{}}}],["catch",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["category",{"_index":484,"title":{"entities/Category.html":{}},"body":{"entities/Category.html":{},"entities/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["category.entity",{"_index":984,"title":{},"body":{"entities/Product.html":{}}}],["category.products",{"_index":958,"title":{},"body":{"entities/Product.html":{}}}],["channel",{"_index":1311,"title":{},"body":{"index.html":{}}}],["check",{"_index":221,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["city",{"_index":9,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"classes/CreateAddressDto.html":{},"entities/OrderAddress.html":{}}}],["city'})@isstring()@isnotempty",{"_index":504,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["class",{"_index":45,"title":{"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":499,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":1295,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1278,"title":{},"body":{"index.html":{}}}],["cluster_addressmodule",{"_index":178,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_exports",{"_index":179,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_providers",{"_index":180,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":458,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_exports",{"_index":460,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":459,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_customermodule",{"_index":606,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_exports",{"_index":607,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_providers",{"_index":608,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_discountmodule",{"_index":668,"title":{},"body":{"modules/DiscountModule.html":{},"overview.html":{}}}],["cluster_discountmodule_exports",{"_index":669,"title":{},"body":{"modules/DiscountModule.html":{},"overview.html":{}}}],["cluster_discountmodule_providers",{"_index":670,"title":{},"body":{"modules/DiscountModule.html":{},"overview.html":{}}}],["cluster_fulfillmentmodule",{"_index":725,"title":{},"body":{"modules/FulfillmentModule.html":{},"overview.html":{}}}],["cluster_fulfillmentmodule_exports",{"_index":726,"title":{},"body":{"modules/FulfillmentModule.html":{},"overview.html":{}}}],["cluster_fulfillmentmodule_providers",{"_index":727,"title":{},"body":{"modules/FulfillmentModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":852,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_imports",{"_index":853,"title":{},"body":{"modules/OrdersModule.html":{}}}],["cluster_ordersmodule_providers",{"_index":854,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":930,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_exports",{"_index":932,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_providers",{"_index":931,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":1019,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":1020,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":1021,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1137,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1139,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1138,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":528,"title":{},"body":{"classes/CreateAddressDto.html":{},"entities/Discount.html":{}}}],["code'})@isstring()@isnotempty",{"_index":520,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["color",{"_index":1175,"title":{},"body":{"entities/Variant.html":{}}}],["column",{"_index":22,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/User.html":{},"entities/Variant.html":{}}}],["column(\"decimal",{"_index":989,"title":{},"body":{"entities/Product.html":{},"entities/Variant.html":{}}}],["column(\"int",{"_index":990,"title":{},"body":{"entities/Product.html":{},"entities/Review.html":{}}}],["column(\"text",{"_index":988,"title":{},"body":{"entities/Product.html":{},"entities/Review.html":{}}}],["column('decimal",{"_index":401,"title":{},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Discount.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Variant.html":{}}}],["column('int",{"_index":454,"title":{},"body":{"entities/CartItem.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/Review.html":{}}}],["column('text",{"_index":962,"title":{},"body":{"entities/Product.html":{},"entities/Review.html":{}}}],["column({default",{"_index":295,"title":{},"body":{"entities/Auth.html":{},"entities/Discount.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":58,"title":{},"body":{"entities/Address-1.html":{},"entities/Cart.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/User.html":{}}}],["column({select",{"_index":1101,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":783,"title":{},"body":{"entities/Order.html":{},"entities/User.html":{}}}],["column({unique",{"_index":291,"title":{},"body":{"entities/Auth.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["come",{"_index":1302,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1051,"title":{},"body":{"entities/Review.html":{}}}],["company",{"_index":805,"title":{},"body":{"entities/OrderAddress.html":{}}}],["const",{"_index":212,"title":{},"body":{"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":195,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(addressrepository",{"_index":196,"title":{},"body":{"injectables/AddressService.html":{}}}],["constructor(authrepository",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(cartrepository",{"_index":466,"title":{},"body":{"injectables/CartService.html":{}}}],["constructor(customerrepository",{"_index":613,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructor(discountrepository",{"_index":675,"title":{},"body":{"injectables/DiscountService.html":{}}}],["constructor(fulfillmentrepository",{"_index":732,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["constructor(ordersrepository",{"_index":864,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(paymentrepository",{"_index":937,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(private",{"_index":150,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["constructor(productsrepository",{"_index":1031,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(usersrepository",{"_index":1145,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":72,"title":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('address",{"_index":149,"title":{},"body":{"controllers/AddressController.html":{}}}],["controller('auth",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cart",{"_index":436,"title":{},"body":{"controllers/CartController.html":{}}}],["controller('customer",{"_index":600,"title":{},"body":{"controllers/CustomerController.html":{}}}],["controller('discount",{"_index":662,"title":{},"body":{"controllers/DiscountController.html":{}}}],["controller('fulfillment",{"_index":719,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["controller('orders",{"_index":846,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('payment",{"_index":924,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('products",{"_index":1013,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('users",{"_index":1131,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":74,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convenience",{"_index":829,"title":{},"body":{"entities/OrderItem.html":{}}}],["country",{"_index":10,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{}}}],["country'})@isstring()@isnotempty",{"_index":507,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["country_code",{"_index":52,"title":{},"body":{"entities/Address-1.html":{},"entities/OrderAddress.html":{}}}],["courses",{"_index":1317,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1181,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":78,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":154,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["create(cartdata",{"_index":419,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["create(createaddressdto",{"_index":84,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{}}}],["create(createorderdto",{"_index":833,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["create(createproductdto",{"_index":1003,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["create(createuserdto",{"_index":1123,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(customerdata",{"_index":588,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["create(discountdata",{"_index":650,"title":{},"body":{"controllers/DiscountController.html":{},"injectables/DiscountService.html":{}}}],["create(fulfillmentdata",{"_index":707,"title":{},"body":{"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{}}}],["create(paymentdata",{"_index":913,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["createaddressdto",{"_index":85,"title":{"classes/CreateAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["created",{"_index":93,"title":{},"body":{"controllers/AddressController.html":{}}}],["created_at",{"_index":287,"title":{},"body":{"entities/Auth.html":{},"entities/Cart.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/Payment.html":{}}}],["createdat",{"_index":11,"title":{},"body":{"entities/Address.html":{},"entities/Category.html":{},"entities/Product.html":{},"entities/Review.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":27,"title":{},"body":{"entities/Address.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{},"entities/User.html":{}}}],["createorderdto",{"_index":529,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createorderdto.customerid",{"_index":879,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createorderitemdto",{"_index":535,"title":{"classes/CreateOrderItemDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":544,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":569,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":1155,"title":{},"body":{"injectables/UsersService.html":{}}}],["credentials",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":548,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["currency_code",{"_index":390,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{},"entities/Payment.html":{}}}],["customer",{"_index":575,"title":{"entities/Customer.html":{}},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["customer.controller",{"_index":610,"title":{},"body":{"modules/CustomerModule.html":{}}}],["customer.service",{"_index":597,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{}}}],["customer/customer.module",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["customer_id",{"_index":391,"title":{},"body":{"entities/Cart.html":{}}}],["customercontroller",{"_index":586,"title":{"controllers/CustomerController.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"coverage.html":{}}}],["customerdata",{"_index":590,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["customerid",{"_index":532,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["customermodule",{"_index":249,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules.html":{},"overview.html":{}}}],["customerrepository",{"_index":615,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customers",{"_index":591,"title":{},"body":{"controllers/CustomerController.html":{}}}],["customerservice",{"_index":596,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":26,"title":{},"body":{"entities/Address.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{},"entities/User.html":{}}}],["dateofbirth",{"_index":1079,"title":{},"body":{"entities/User.html":{}}}],["declarations",{"_index":174,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"controllers/AppController.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"entities/Variant.html":{}}}],["deeper",{"_index":1313,"title":{},"body":{"index.html":{}}}],["default",{"_index":299,"title":{},"body":{"entities/Auth.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/Order.html":{},"entities/Product.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{}}}],["delete",{"_index":112,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete(':id",{"_index":164,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":426,"title":{},"body":{"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":111,"title":{},"body":{"controllers/AddressController.html":{}}}],["deleted",{"_index":114,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["delivered",{"_index":793,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":172,"title":{"dependencies.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1265,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1283,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1275,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1294,"title":{},"body":{"index.html":{}}}],["description",{"_index":91,"title":{},"body":{"controllers/AddressController.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/Product.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":828,"title":{},"body":{"entities/OrderItem.html":{}}}],["development",{"_index":1252,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1325,"title":{},"body":{"index.html":{}}}],["discord",{"_index":1310,"title":{},"body":{"index.html":{}}}],["discount",{"_index":629,"title":{"entities/Discount.html":{}},"body":{"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Order.html":{},"coverage.html":{}}}],["discount.controller",{"_index":672,"title":{},"body":{"modules/DiscountModule.html":{}}}],["discount.order",{"_index":796,"title":{},"body":{"entities/Order.html":{}}}],["discount.service",{"_index":659,"title":{},"body":{"controllers/DiscountController.html":{},"modules/DiscountModule.html":{}}}],["discount/discount.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["discount_total",{"_index":392,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["discountcontroller",{"_index":648,"title":{"controllers/DiscountController.html":{}},"body":{"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"coverage.html":{}}}],["discountdata",{"_index":652,"title":{},"body":{"controllers/DiscountController.html":{},"injectables/DiscountService.html":{}}}],["discountmodule",{"_index":250,"title":{"modules/DiscountModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiscountModule.html":{},"modules.html":{},"overview.html":{}}}],["discountprice",{"_index":549,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["discountrepository",{"_index":677,"title":{},"body":{"injectables/DiscountService.html":{}}}],["discounts",{"_index":653,"title":{},"body":{"controllers/DiscountController.html":{},"entities/Order.html":{}}}],["discountservice",{"_index":658,"title":{"injectables/DiscountService.html":{}},"body":{"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"coverage.html":{},"overview.html":{}}}],["dive",{"_index":1312,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1182,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":132,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{}}}],["dto/update",{"_index":134,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{}}}],["dtos/create",{"_index":842,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/login.dto",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/register.dto",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/update",{"_index":844,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e.g",{"_index":645,"title":{},"body":{"entities/Discount.html":{},"entities/Variant.html":{}}}],["e2e",{"_index":1260,"title":{},"body":{"index.html":{}}}],["eager",{"_index":821,"title":{},"body":{"entities/OrderItem.html":{},"entities/Product.html":{}}}],["ecommerce_db",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["efficient",{"_index":1239,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1273,"title":{},"body":{"index.html":{}}}],["email",{"_index":53,"title":{},"body":{"entities/Address-1.html":{},"entities/Auth.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["ends_at",{"_index":632,"title":{},"body":{"entities/Discount.html":{}}}],["ensure",{"_index":1271,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":222,"title":{},"body":{"injectables/AddressService.html":{}}}],["enterprise",{"_index":1329,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/User.html":{},"entities/Variant.html":{},"overview.html":{}}}],["entities/address.entity",{"_index":140,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{}}}],["entities/auth.entity",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["entities/cart",{"_index":463,"title":{},"body":{"modules/CartModule.html":{}}}],["entities/cart.entity",{"_index":434,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{}}}],["entities/category.entity",{"_index":1025,"title":{},"body":{"modules/ProductsModule.html":{}}}],["entities/customer.entity",{"_index":598,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["entities/discount.entity",{"_index":660,"title":{},"body":{"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{}}}],["entities/fulfillment.entity",{"_index":717,"title":{},"body":{"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{}}}],["entities/order",{"_index":858,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["entities/order.entity",{"_index":857,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["entities/payment.entity",{"_index":922,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{}}}],["entities/product",{"_index":1026,"title":{},"body":{"modules/ProductsModule.html":{}}}],["entities/product.entity",{"_index":1024,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["entities/review.entity",{"_index":1027,"title":{},"body":{"modules/ProductsModule.html":{}}}],["entities/user.entity",{"_index":1142,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entities/variant.entity",{"_index":1028,"title":{},"body":{"modules/ProductsModule.html":{}}}],["entity",{"_index":0,"title":{"entities/Address.html":{},"entities/Address-1.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/User.html":{},"entities/Variant.html":{}},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/User.html":{},"entities/Variant.html":{},"coverage.html":{}}}],["entity('users",{"_index":1115,"title":{},"body":{"entities/User.html":{}}}],["enum",{"_index":784,"title":{},"body":{"entities/Order.html":{},"entities/User.html":{}}}],["enum('male",{"_index":1117,"title":{},"body":{"entities/User.html":{}}}],["enumerations",{"_index":1228,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{}}}],["error",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["error('cart",{"_index":480,"title":{},"body":{"injectables/CartService.html":{}}}],["error('customer",{"_index":626,"title":{},"body":{"injectables/CustomerService.html":{}}}],["error('discount",{"_index":688,"title":{},"body":{"injectables/DiscountService.html":{}}}],["error('fulfillment",{"_index":745,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["error('invalid",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('payment",{"_index":950,"title":{},"body":{"injectables/PaymentService.html":{}}}],["example",{"_index":526,"title":{},"body":{"classes/CreateAddressDto.html":{},"index.html":{}}}],["executioncontext",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["experience",{"_index":1315,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":44,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{}}}],["exports",{"_index":177,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":750,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["false",{"_index":555,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/User.html":{}}}],["fast",{"_index":1287,"title":{},"body":{"index.html":{}}}],["features",{"_index":1298,"title":{},"body":{"index.html":{}}}],["female",{"_index":1118,"title":{},"body":{"entities/User.html":{}}}],["few",{"_index":1289,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"coverage.html":{}}}],["findall",{"_index":79,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@getuser",{"_index":156,"title":{},"body":{"controllers/AddressController.html":{}}}],["findall(user",{"_index":99,"title":{},"body":{"controllers/AddressController.html":{}}}],["findallforuser",{"_index":193,"title":{},"body":{"injectables/AddressService.html":{}}}],["findallforuser(user",{"_index":202,"title":{},"body":{"injectables/AddressService.html":{}}}],["findone",{"_index":80,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":159,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":106,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneforuser",{"_index":194,"title":{},"body":{"injectables/AddressService.html":{}}}],["findoneforuser(id",{"_index":204,"title":{},"body":{"injectables/AddressService.html":{}}}],["first_name",{"_index":54,"title":{},"body":{"entities/Address-1.html":{},"entities/Customer.html":{},"entities/OrderAddress.html":{}}}],["firstname",{"_index":1080,"title":{},"body":{"entities/User.html":{}}}],["fixed_amount",{"_index":647,"title":{},"body":{"entities/Discount.html":{}}}],["focus",{"_index":1297,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1333,"title":{},"body":{"index.html":{}}}],["found",{"_index":220,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":1237,"title":{},"body":{"index.html":{}}}],["fulfillment",{"_index":691,"title":{"entities/Fulfillment.html":{}},"body":{"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"coverage.html":{}}}],["fulfillment.controller",{"_index":729,"title":{},"body":{"modules/FulfillmentModule.html":{}}}],["fulfillment.service",{"_index":716,"title":{},"body":{"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{}}}],["fulfillment/fulfillment.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["fulfillment_status",{"_index":760,"title":{},"body":{"entities/Order.html":{}}}],["fulfillmentcontroller",{"_index":705,"title":{"controllers/FulfillmentController.html":{}},"body":{"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"coverage.html":{}}}],["fulfillmentdata",{"_index":709,"title":{},"body":{"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{}}}],["fulfillmentmodule",{"_index":251,"title":{"modules/FulfillmentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FulfillmentModule.html":{},"modules.html":{},"overview.html":{}}}],["fulfillmentrepository",{"_index":734,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["fulfillments",{"_index":710,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["fulfillmentservice",{"_index":715,"title":{"injectables/FulfillmentService.html":{}},"body":{"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"coverage.html":{},"overview.html":{}}}],["full",{"_index":1328,"title":{},"body":{"index.html":{}}}],["function",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1231,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1292,"title":{},"body":{"index.html":{}}}],["gender",{"_index":1081,"title":{},"body":{"entities/User.html":{}}}],["get(':id",{"_index":158,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apioperation({summary",{"_index":107,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{}}}],["get()@apioperation({summary",{"_index":100,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{}}}],["gethello",{"_index":238,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1233,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":144,"title":{},"body":{"controllers/AddressController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1320,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1343,"title":{},"body":{"index.html":{}}}],["hands",{"_index":1314,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1303,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":283,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1318,"title":{},"body":{"index.html":{}}}],["here",{"_index":1351,"title":{},"body":{"index.html":{}}}],["host",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":127,"title":{},"body":{"controllers/AddressController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":165,"title":{},"body":{"controllers/AddressController.html":{}}}],["httpexception",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["httpexception(error.message",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["https://nestjs.com",{"_index":1357,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":128,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["httpstatus.bad_request",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["httpstatus.not_found",{"_index":440,"title":{},"body":{"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["httpstatus.unauthorized",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":12,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{}}}],["identifier",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":967,"title":{},"body":{"entities/Product.html":{}}}],["image.entity",{"_index":985,"title":{},"body":{"entities/Product.html":{},"modules/ProductsModule.html":{}}}],["image.entity.ts",{"_index":992,"title":{},"body":{"entities/ProductImage.html":{},"coverage.html":{}}}],["image.entity.ts:10",{"_index":1000,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:13",{"_index":995,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:16",{"_index":999,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.entity.ts:7",{"_index":996,"title":{},"body":{"entities/ProductImage.html":{}}}],["image.product",{"_index":968,"title":{},"body":{"entities/Product.html":{}}}],["images",{"_index":954,"title":{},"body":{"entities/Product.html":{}}}],["import",{"_index":40,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{}}}],["imports",{"_index":188,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{}}}],["information",{"_index":862,"title":{},"body":{"modules/OrdersModule.html":{},"index.html":{}}}],["infrastructure",{"_index":1300,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":190,"title":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":191,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":209,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(address",{"_index":210,"title":{},"body":{"injectables/AddressService.html":{}}}],["injectrepository(auth",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository(cart",{"_index":474,"title":{},"body":{"injectables/CartService.html":{}}}],["injectrepository(customer",{"_index":621,"title":{},"body":{"injectables/CustomerService.html":{}}}],["injectrepository(discount",{"_index":683,"title":{},"body":{"injectables/DiscountService.html":{}}}],["injectrepository(fulfillment",{"_index":740,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["injectrepository(order",{"_index":874,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectrepository(orderitem",{"_index":875,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectrepository(payment",{"_index":945,"title":{},"body":{"injectables/PaymentService.html":{}}}],["injectrepository(product",{"_index":1039,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(user",{"_index":1153,"title":{},"body":{"injectables/UsersService.html":{}}}],["inr",{"_index":557,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["install",{"_index":1291,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1250,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1321,"title":{},"body":{"index.html":{}}}],["is_active",{"_index":633,"title":{},"body":{"entities/Discount.html":{}}}],["isactive",{"_index":550,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["isnotempty",{"_index":523,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["isstring",{"_index":522,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["isverified",{"_index":1082,"title":{},"body":{"entities/User.html":{}}}],["item",{"_index":407,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{}}}],["item.cart",{"_index":408,"title":{},"body":{"entities/Cart.html":{}}}],["item.entity",{"_index":416,"title":{},"body":{"entities/Cart.html":{},"modules/CartModule.html":{},"entities/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["item.entity.ts",{"_index":446,"title":{},"body":{"entities/CartItem.html":{},"entities/OrderItem.html":{},"coverage.html":{}}}],["item.entity.ts:10",{"_index":453,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:11",{"_index":822,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:13",{"_index":455,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:14",{"_index":823,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:16",{"_index":456,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:17",{"_index":824,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:19",{"_index":451,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:20",{"_index":820,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.entity.ts:7",{"_index":452,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:8",{"_index":818,"title":{},"body":{"entities/OrderItem.html":{}}}],["item.order",{"_index":776,"title":{},"body":{"entities/Order.html":{}}}],["itemdto",{"_index":885,"title":{},"body":{"injectables/OrdersService.html":{}}}],["itemdto.product_id",{"_index":888,"title":{},"body":{"injectables/OrdersService.html":{}}}],["itemdto.quantity",{"_index":890,"title":{},"body":{"injectables/OrdersService.html":{}}}],["items",{"_index":393,"title":{},"body":{"entities/Cart.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{}}}],["items.length",{"_index":882,"title":{},"body":{"injectables/OrdersService.html":{}}}],["job",{"_index":1336,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1338,"title":{},"body":{"index.html":{}}}],["join",{"_index":1349,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":789,"title":{},"body":{"entities/Order.html":{}}}],["jwt",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":141,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AddressController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":1354,"title":{},"body":{"index.html":{}}}],["key",{"_index":1268,"title":{},"body":{"index.html":{}}}],["last_name",{"_index":55,"title":{},"body":{"entities/Address-1.html":{},"entities/Customer.html":{},"entities/OrderAddress.html":{}}}],["lastlogin",{"_index":1083,"title":{},"body":{"entities/User.html":{}}}],["lastname",{"_index":1084,"title":{},"body":{"entities/User.html":{}}}],["learn",{"_index":1306,"title":{},"body":{"index.html":{}}}],["legend",{"_index":173,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1360,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1341,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1335,"title":{},"body":{"index.html":{}}}],["load",{"_index":827,"title":{},"body":{"entities/OrderItem.html":{}}}],["localhost",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":305,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":1277,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1331,"title":{},"body":{"index.html":{}}}],["main",{"_index":513,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["makes",{"_index":1285,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1299,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":42,"title":{},"body":{"entities/Address.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/Variant.html":{}}}],["manytoone(undefined",{"_index":36,"title":{},"body":{"entities/Address.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/Variant.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":765,"title":{},"body":{"entities/Order.html":{}}}],["matching",{"_index":47,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":1281,"title":{},"body":{"index.html":{}}}],["message",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["metadata",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":77,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1227,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1340,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1255,"title":{},"body":{"index.html":{}}}],["module",{"_index":169,"title":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":171,"title":{"modules.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1276,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1355,"title":{},"body":{"index.html":{}}}],["name",{"_index":96,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateProductDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":1326,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1244,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1359,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1266,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":129,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1075,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":1293,"title":{},"body":{"index.html":{}}}],["nestjs/passport",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":139,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"classes/LoginDto.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"classes/RegisterDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":186,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":87,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["neworder",{"_index":877,"title":{},"body":{"injectables/OrdersService.html":{}}}],["node.js",{"_index":1236,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":208,"title":{},"body":{"injectables/AddressService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`address",{"_index":219,"title":{},"body":{"injectables/AddressService.html":{}}}],["notfoundexception(`order",{"_index":898,"title":{},"body":{"injectables/OrdersService.html":{}}}],["notfoundexception(`product",{"_index":887,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(`user",{"_index":1161,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":1249,"title":{},"body":{"index.html":{}}}],["null",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["nullable",{"_index":71,"title":{},"body":{"entities/Address-1.html":{},"entities/Cart.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"entities/Discount.html":{},"entities/Order.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/Review.html":{},"entities/Variant.html":{}}}],["object.assign(address",{"_index":228,"title":{},"body":{"injectables/AddressService.html":{}}}],["object.assign(order",{"_index":899,"title":{},"body":{"injectables/OrdersService.html":{}}}],["object.assign(product",{"_index":1044,"title":{},"body":{"injectables/ProductsService.html":{}}}],["object.assign(user",{"_index":1164,"title":{},"body":{"injectables/UsersService.html":{}}}],["offer",{"_index":1337,"title":{},"body":{"index.html":{}}}],["official",{"_index":1282,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":1074,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1072,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["ondelete",{"_index":998,"title":{},"body":{"entities/ProductImage.html":{}}}],["onetomany",{"_index":415,"title":{},"body":{"entities/Cart.html":{},"entities/Category.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":406,"title":{},"body":{"entities/Cart.html":{},"entities/Category.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["open",{"_index":1342,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":756,"title":{"entities/Order.html":{}},"body":{"entities/Order.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["order.dto",{"_index":843,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":531,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:13",{"_index":534,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:16",{"_index":541,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:19",{"_index":540,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:22",{"_index":537,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:5",{"_index":542,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["order.dto.ts:8",{"_index":543,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["order.entity",{"_index":825,"title":{},"body":{"entities/OrderItem.html":{}}}],["order.items",{"_index":819,"title":{},"body":{"entities/OrderItem.html":{}}}],["order_id",{"_index":693,"title":{},"body":{"entities/Fulfillment.html":{},"entities/Payment.html":{}}}],["orderaddress",{"_index":764,"title":{"entities/OrderAddress.html":{}},"body":{"entities/Order.html":{},"entities/OrderAddress.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["orderdata",{"_index":876,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderitem",{"_index":775,"title":{"entities/OrderItem.html":{}},"body":{"entities/Order.html":{},"entities/OrderItem.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["orderitems",{"_index":883,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderitems.push(orderitem",{"_index":894,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderitemsrepository",{"_index":865,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders",{"_index":832,"title":{},"body":{"controllers/OrdersController.html":{}}}],["orders.controller",{"_index":856,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":841,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["orderscontroller",{"_index":830,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":252,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersrepository",{"_index":867,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordersservice",{"_index":840,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":782,"title":{},"body":{"entities/Order.html":{},"injectables/OrdersService.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.pending",{"_index":795,"title":{},"body":{"entities/Order.html":{},"injectables/OrdersService.html":{}}}],["out",{"_index":183,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1364,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owns",{"_index":223,"title":{},"body":{"injectables/AddressService.html":{}}}],["package",{"_index":1199,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paid",{"_index":791,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":124,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":162,"title":{},"body":{"controllers/AddressController.html":{}}}],["parameters",{"_index":95,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":125,"title":{},"body":{"controllers/AddressController.html":{}}}],["part",{"_index":1327,"title":{},"body":{"index.html":{}}}],["partial",{"_index":420,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["partialtype",{"_index":1065,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaddressdto",{"_index":1064,"title":{},"body":{"classes/UpdateAddressDto.html":{}}}],["partialtype(createorderdto",{"_index":1067,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["partialtype(createproductdto",{"_index":1069,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["passport",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["passportmodule",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{}}}],["password",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"entities/Auth.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["password_hash",{"_index":577,"title":{},"body":{"entities/Customer.html":{}}}],["passwordhash",{"_index":1085,"title":{},"body":{"entities/User.html":{}}}],["patch",{"_index":123,"title":{},"body":{"controllers/AddressController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":161,"title":{},"body":{"controllers/AddressController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":118,"title":{},"body":{"controllers/AddressController.html":{},"controllers/OrdersController.html":{}}}],["payload",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["payment",{"_index":797,"title":{"entities/Payment.html":{}},"body":{"entities/Order.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["payment.controller",{"_index":934,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.order",{"_index":798,"title":{},"body":{"entities/Order.html":{}}}],["payment.service",{"_index":921,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment/payment.module",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["payment_status",{"_index":761,"title":{},"body":{"entities/Order.html":{}}}],["paymentcontroller",{"_index":911,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentdata",{"_index":915,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["paymentmodule",{"_index":253,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentrepository",{"_index":939,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payments",{"_index":799,"title":{},"body":{"entities/Order.html":{},"controllers/PaymentController.html":{}}}],["paymentservice",{"_index":920,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["pending",{"_index":539,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["percentage",{"_index":646,"title":{},"body":{"entities/Discount.html":{}}}],["pg",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":56,"title":{},"body":{"entities/Address-1.html":{},"entities/Customer.html":{},"entities/OrderAddress.html":{}}}],["phonenumber",{"_index":1086,"title":{},"body":{"entities/User.html":{}}}],["platform",{"_index":1280,"title":{},"body":{"index.html":{}}}],["please",{"_index":1309,"title":{},"body":{"index.html":{}}}],["port",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":1274,"title":{},"body":{"index.html":{}}}],["post",{"_index":121,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apioperation({summary",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apioperation({summary",{"_index":86,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{}}}],["postal",{"_index":519,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["postal_code",{"_index":57,"title":{},"body":{"entities/Address-1.html":{},"entities/OrderAddress.html":{}}}],["postgres",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":76,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":551,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{}}}],["priceadjustment",{"_index":1167,"title":{},"body":{"entities/Variant.html":{}}}],["primarygeneratedcolumn",{"_index":30,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/User.html":{},"entities/Variant.html":{}}}],["primarygeneratedcolumn(\"uuid",{"_index":498,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/Variant.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":66,"title":{},"body":{"entities/Address-1.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/User.html":{},"entities/Variant.html":{}}}],["private",{"_index":211,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["product",{"_index":492,"title":{"entities/Product.html":{}},"body":{"entities/Category.html":{},"entities/OrderItem.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"entities/Variant.html":{},"coverage.html":{}}}],["product.category",{"_index":493,"title":{},"body":{"entities/Category.html":{}}}],["product.dto",{"_index":1011,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":546,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":559,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:14",{"_index":564,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":560,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:20",{"_index":558,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:23",{"_index":565,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:26",{"_index":567,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:29",{"_index":562,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:32",{"_index":556,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":563,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:8",{"_index":566,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entity",{"_index":497,"title":{},"body":{"entities/Category.html":{},"entities/ProductImage.html":{},"entities/Review.html":{},"entities/Variant.html":{}}}],["product.images",{"_index":997,"title":{},"body":{"entities/ProductImage.html":{}}}],["product.price",{"_index":891,"title":{},"body":{"injectables/OrdersService.html":{}}}],["product.reviews",{"_index":1056,"title":{},"body":{"entities/Review.html":{}}}],["product.variants",{"_index":1171,"title":{},"body":{"entities/Variant.html":{}}}],["product_id",{"_index":447,"title":{},"body":{"entities/CartItem.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["productimage",{"_index":966,"title":{"entities/ProductImage.html":{}},"body":{"entities/Product.html":{},"entities/ProductImage.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["production",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["products",{"_index":486,"title":{},"body":{"entities/Category.html":{},"controllers/ProductsController.html":{}}}],["products.controller",{"_index":1023,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":1010,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/entities/product.entity",{"_index":826,"title":{},"body":{"entities/OrderItem.html":{}}}],["products/entities/review.entity",{"_index":1111,"title":{},"body":{"entities/User.html":{}}}],["products/products.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{}}}],["products/products.service",{"_index":873,"title":{},"body":{"injectables/OrdersService.html":{}}}],["productscontroller",{"_index":1001,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":254,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["productsrepository",{"_index":1033,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsservice",{"_index":861,"title":{"injectables/ProductsService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["profileimage",{"_index":1087,"title":{},"body":{"entities/User.html":{}}}],["progressive",{"_index":1235,"title":{},"body":{"index.html":{}}}],["project",{"_index":1247,"title":{},"body":{"index.html":{}}}],["promise",{"_index":201,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/Variant.html":{},"properties.html":{}}}],["provided",{"_index":231,"title":{},"body":{"injectables/AddressService.html":{}}}],["provider_id",{"_index":694,"title":{},"body":{"entities/Fulfillment.html":{},"entities/Payment.html":{}}}],["providers",{"_index":176,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["province",{"_index":527,"title":{},"body":{"classes/CreateAddressDto.html":{},"entities/OrderAddress.html":{}}}],["province'})@isstring()@isnotempty",{"_index":510,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["put",{"_index":431,"title":{},"body":{"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{}}}],["put(':id",{"_index":441,"title":{},"body":{"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{}}}],["put(':id')@apioperation({summary",{"_index":429,"title":{},"body":{"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["quantity",{"_index":448,"title":{},"body":{"entities/CartItem.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"entities/OrderItem.html":{},"injectables/OrdersService.html":{}}}],["questions",{"_index":1307,"title":{},"body":{"index.html":{}}}],["rating",{"_index":1052,"title":{},"body":{"entities/Review.html":{}}}],["read",{"_index":1350,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":151,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":1264,"title":{},"body":{"index.html":{}}}],["real",{"_index":1322,"title":{},"body":{"index.html":{}}}],["red",{"_index":1177,"title":{},"body":{"entities/Variant.html":{}}}],["reflect",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["region_id",{"_index":394,"title":{},"body":{"entities/Cart.html":{}}}],["register",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":312,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["relations",{"_index":478,"title":{},"body":{"injectables/CartService.html":{}}}],["remove",{"_index":82,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":166,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":110,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["replace",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["repository",{"_index":197,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["request",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":568,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["requiring",{"_index":1288,"title":{},"body":{"index.html":{}}}],["reset",{"_index":182,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":1301,"title":{},"body":{"index.html":{}}}],["result",{"_index":232,"title":{},"body":{"injectables/AddressService.html":{}}}],["result.affected",{"_index":234,"title":{},"body":{"injectables/AddressService.html":{}}}],["results",{"_index":46,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":103,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":98,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":974,"title":{"entities/Review.html":{}},"body":{"entities/Product.html":{},"modules/ProductsModule.html":{},"entities/Review.html":{},"entities/User.html":{},"coverage.html":{}}}],["review.entity",{"_index":986,"title":{},"body":{"entities/Product.html":{}}}],["review.product",{"_index":975,"title":{},"body":{"entities/Product.html":{}}}],["review.user",{"_index":1105,"title":{},"body":{"entities/User.html":{}}}],["reviews",{"_index":955,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["role",{"_index":288,"title":{},"body":{"entities/Auth.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["run",{"_index":1251,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1272,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["savedorder",{"_index":880,"title":{},"body":{"injectables/OrdersService.html":{}}}],["scalable",{"_index":1240,"title":{},"body":{"index.html":{}}}],["secret",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{}}}],["select",{"_index":1116,"title":{},"body":{"entities/User.html":{}}}],["seller",{"_index":1114,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["server",{"_index":1241,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1248,"title":{},"body":{"index.html":{}}}],["shipped",{"_index":792,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["shipping_address",{"_index":762,"title":{},"body":{"entities/Order.html":{}}}],["shipping_address_id",{"_index":763,"title":{},"body":{"entities/Order.html":{}}}],["shipping_methods",{"_index":802,"title":{},"body":{"entities/Order.html":{}}}],["shipping_total",{"_index":395,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["shippingmethod",{"_index":800,"title":{},"body":{"entities/Order.html":{}}}],["shippingmethod.order",{"_index":801,"title":{},"body":{"entities/Order.html":{}}}],["side",{"_index":1242,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1290,"title":{},"body":{"index.html":{}}}],["single",{"_index":108,"title":{},"body":{"controllers/AddressController.html":{}}}],["size",{"_index":1176,"title":{},"body":{"entities/Variant.html":{}}}],["sku",{"_index":552,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["slug",{"_index":487,"title":{},"body":{"entities/Category.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"modules/DiscountModule.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"modules/FulfillmentModule.html":{},"injectables/FulfillmentService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"index.html":{}}}],["sponsors",{"_index":1345,"title":{},"body":{"index.html":{}}}],["src/.../get",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.entity.ts",{"_index":1229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.entity.ts",{"_index":1230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/address/address.controller.ts",{"_index":75,"title":{},"body":{"controllers/AddressController.html":{},"coverage.html":{}}}],["src/address/address.controller.ts:33",{"_index":94,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:40",{"_index":105,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:47",{"_index":109,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:54",{"_index":120,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:66",{"_index":115,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.module.ts",{"_index":184,"title":{},"body":{"modules/AddressModule.html":{}}}],["src/address/address.service.ts",{"_index":192,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/address/address.service.ts:10",{"_index":198,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:16",{"_index":200,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:24",{"_index":203,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:30",{"_index":205,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:40",{"_index":207,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:53",{"_index":206,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/dto/create",{"_index":500,"title":{},"body":{"classes/CreateAddressDto.html":{},"coverage.html":{}}}],["src/address/dto/update",{"_index":1063,"title":{},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["src/address/entities/address.entity.ts",{"_index":6,"title":{},"body":{"entities/Address.html":{},"coverage.html":{}}}],["src/address/entities/address.entity.ts:14",{"_index":31,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:17",{"_index":33,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:20",{"_index":24,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:23",{"_index":32,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:26",{"_index":39,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:29",{"_index":25,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:32",{"_index":38,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:35",{"_index":28,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:38",{"_index":35,"title":{},"body":{"entities/Address.html":{}}}],["src/app.controller.ts",{"_index":237,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":239,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":281,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":282,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:14",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:37",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/get",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/login.dto.ts",{"_index":753,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dtos/login.dto.ts:5",{"_index":754,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/login.dto.ts:8",{"_index":755,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/register.dto.ts",{"_index":1046,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dtos/register.dto.ts:11",{"_index":1049,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dtos/register.dto.ts:5",{"_index":1047,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dtos/register.dto.ts:8",{"_index":1048,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":286,"title":{},"body":{"entities/Auth.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts:12",{"_index":294,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/entities/auth.entity.ts:15",{"_index":296,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/entities/auth.entity.ts:18",{"_index":290,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/entities/auth.entity.ts:21",{"_index":297,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/entities/auth.entity.ts:6",{"_index":293,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/entities/auth.entity.ts:9",{"_index":292,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/guards/jwt",{"_index":748,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts",{"_index":418,"title":{},"body":{"controllers/CartController.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts:13",{"_index":421,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:24",{"_index":424,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:30",{"_index":425,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:40",{"_index":430,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:50",{"_index":427,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.module.ts",{"_index":461,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":465,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/cart.service.ts:13",{"_index":469,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:18",{"_index":470,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:22",{"_index":471,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:30",{"_index":473,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:35",{"_index":472,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:7",{"_index":467,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/entities/cart",{"_index":445,"title":{},"body":{"entities/CartItem.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts",{"_index":389,"title":{},"body":{"entities/Cart.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts:10",{"_index":400,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:13",{"_index":403,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:16",{"_index":410,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:19",{"_index":399,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:22",{"_index":412,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:25",{"_index":411,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:28",{"_index":402,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:31",{"_index":413,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:34",{"_index":398,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:37",{"_index":414,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:40",{"_index":409,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:7",{"_index":404,"title":{},"body":{"entities/Cart.html":{}}}],["src/customer/customer.controller.ts",{"_index":587,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{}}}],["src/customer/customer.controller.ts:13",{"_index":589,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:24",{"_index":592,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:30",{"_index":593,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:40",{"_index":595,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:50",{"_index":594,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.module.ts",{"_index":609,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/customer.service.ts",{"_index":612,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/customer/customer.service.ts:13",{"_index":616,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:18",{"_index":617,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:22",{"_index":618,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:30",{"_index":620,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:35",{"_index":619,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:7",{"_index":614,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/entities/customer.entity.ts",{"_index":576,"title":{},"body":{"entities/Customer.html":{},"coverage.html":{}}}],["src/customer/entities/customer.entity.ts:12",{"_index":582,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:15",{"_index":579,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:18",{"_index":584,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:21",{"_index":583,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:24",{"_index":578,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:27",{"_index":585,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:6",{"_index":581,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:9",{"_index":580,"title":{},"body":{"entities/Customer.html":{}}}],["src/discount/discount.controller.ts",{"_index":649,"title":{},"body":{"controllers/DiscountController.html":{},"coverage.html":{}}}],["src/discount/discount.controller.ts:13",{"_index":651,"title":{},"body":{"controllers/DiscountController.html":{}}}],["src/discount/discount.controller.ts:24",{"_index":654,"title":{},"body":{"controllers/DiscountController.html":{}}}],["src/discount/discount.controller.ts:30",{"_index":655,"title":{},"body":{"controllers/DiscountController.html":{}}}],["src/discount/discount.controller.ts:40",{"_index":657,"title":{},"body":{"controllers/DiscountController.html":{}}}],["src/discount/discount.controller.ts:50",{"_index":656,"title":{},"body":{"controllers/DiscountController.html":{}}}],["src/discount/discount.module.ts",{"_index":671,"title":{},"body":{"modules/DiscountModule.html":{}}}],["src/discount/discount.service.ts",{"_index":674,"title":{},"body":{"injectables/DiscountService.html":{},"coverage.html":{}}}],["src/discount/discount.service.ts:14",{"_index":678,"title":{},"body":{"injectables/DiscountService.html":{}}}],["src/discount/discount.service.ts:19",{"_index":679,"title":{},"body":{"injectables/DiscountService.html":{}}}],["src/discount/discount.service.ts:23",{"_index":680,"title":{},"body":{"injectables/DiscountService.html":{}}}],["src/discount/discount.service.ts:31",{"_index":682,"title":{},"body":{"injectables/DiscountService.html":{}}}],["src/discount/discount.service.ts:36",{"_index":681,"title":{},"body":{"injectables/DiscountService.html":{}}}],["src/discount/discount.service.ts:8",{"_index":676,"title":{},"body":{"injectables/DiscountService.html":{}}}],["src/discount/entities/discount.entity.ts",{"_index":630,"title":{},"body":{"entities/Discount.html":{},"coverage.html":{}}}],["src/discount/entities/discount.entity.ts:12",{"_index":635,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:15",{"_index":638,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:18",{"_index":643,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:21",{"_index":642,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:24",{"_index":639,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:27",{"_index":641,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:30",{"_index":637,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:33",{"_index":644,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:6",{"_index":640,"title":{},"body":{"entities/Discount.html":{}}}],["src/discount/entities/discount.entity.ts:9",{"_index":636,"title":{},"body":{"entities/Discount.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts",{"_index":692,"title":{},"body":{"entities/Fulfillment.html":{},"coverage.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:12",{"_index":700,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:15",{"_index":701,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:18",{"_index":702,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:21",{"_index":703,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:24",{"_index":697,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:27",{"_index":704,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:6",{"_index":698,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/entities/fulfillment.entity.ts:9",{"_index":699,"title":{},"body":{"entities/Fulfillment.html":{}}}],["src/fulfillment/fulfillment.controller.ts",{"_index":706,"title":{},"body":{"controllers/FulfillmentController.html":{},"coverage.html":{}}}],["src/fulfillment/fulfillment.controller.ts:13",{"_index":708,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["src/fulfillment/fulfillment.controller.ts:24",{"_index":711,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["src/fulfillment/fulfillment.controller.ts:30",{"_index":712,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["src/fulfillment/fulfillment.controller.ts:40",{"_index":714,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["src/fulfillment/fulfillment.controller.ts:50",{"_index":713,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["src/fulfillment/fulfillment.module.ts",{"_index":728,"title":{},"body":{"modules/FulfillmentModule.html":{}}}],["src/fulfillment/fulfillment.service.ts",{"_index":731,"title":{},"body":{"injectables/FulfillmentService.html":{},"coverage.html":{}}}],["src/fulfillment/fulfillment.service.ts:13",{"_index":735,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["src/fulfillment/fulfillment.service.ts:18",{"_index":736,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["src/fulfillment/fulfillment.service.ts:22",{"_index":737,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["src/fulfillment/fulfillment.service.ts:30",{"_index":739,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["src/fulfillment/fulfillment.service.ts:35",{"_index":738,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["src/fulfillment/fulfillment.service.ts:7",{"_index":733,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["src/main.ts",{"_index":1194,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/dtos/create",{"_index":530,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{}}}],["src/orders/dtos/update",{"_index":1066,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/orders/entities/address.entity.ts",{"_index":49,"title":{},"body":{"entities/Address-1.html":{},"coverage.html":{}}}],["src/orders/entities/address.entity.ts:12",{"_index":68,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:15",{"_index":60,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:18",{"_index":61,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:21",{"_index":62,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:24",{"_index":70,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:27",{"_index":63,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:30",{"_index":69,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:33",{"_index":64,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:6",{"_index":67,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/address.entity.ts:9",{"_index":65,"title":{},"body":{"entities/Address-1.html":{}}}],["src/orders/entities/order",{"_index":803,"title":{},"body":{"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"coverage.html":{}}}],["src/orders/entities/order.entity.ts",{"_index":757,"title":{},"body":{"entities/Order.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/orders/entities/order.entity.ts:26",{"_index":774,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:29",{"_index":785,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:32",{"_index":769,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:35",{"_index":772,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:38",{"_index":767,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:41",{"_index":780,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:44",{"_index":778,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:47",{"_index":773,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:50",{"_index":771,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:53",{"_index":781,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:56",{"_index":786,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:59",{"_index":787,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:62",{"_index":768,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:65",{"_index":788,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:68",{"_index":777,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:72",{"_index":766,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:76",{"_index":779,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/entities/order.entity.ts:79",{"_index":770,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/orders.controller.ts",{"_index":831,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:14",{"_index":834,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:20",{"_index":835,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:26",{"_index":836,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:32",{"_index":839,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:38",{"_index":837,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":855,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":863,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:11",{"_index":866,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:20",{"_index":868,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:54",{"_index":869,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:58",{"_index":870,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:66",{"_index":872,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:72",{"_index":871,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/payment/entities/payment.entity.ts",{"_index":902,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/payment/entities/payment.entity.ts:12",{"_index":908,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:15",{"_index":909,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:18",{"_index":903,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:21",{"_index":905,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:24",{"_index":904,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:27",{"_index":910,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:6",{"_index":906,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:9",{"_index":907,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.controller.ts",{"_index":912,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/payment/payment.controller.ts:13",{"_index":914,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:24",{"_index":916,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:30",{"_index":917,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:40",{"_index":919,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:50",{"_index":918,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.module.ts",{"_index":933,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/payment/payment.service.ts",{"_index":936,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/payment/payment.service.ts:13",{"_index":940,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:18",{"_index":941,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:22",{"_index":942,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:30",{"_index":944,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:35",{"_index":943,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:7",{"_index":938,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/products/dtos/create",{"_index":545,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/update",{"_index":1068,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/products/entities/category.entity.ts",{"_index":485,"title":{},"body":{"entities/Category.html":{},"coverage.html":{}}}],["src/products/entities/category.entity.ts:10",{"_index":491,"title":{},"body":{"entities/Category.html":{}}}],["src/products/entities/category.entity.ts:13",{"_index":495,"title":{},"body":{"entities/Category.html":{}}}],["src/products/entities/category.entity.ts:16",{"_index":489,"title":{},"body":{"entities/Category.html":{}}}],["src/products/entities/category.entity.ts:19",{"_index":494,"title":{},"body":{"entities/Category.html":{}}}],["src/products/entities/category.entity.ts:22",{"_index":488,"title":{},"body":{"entities/Category.html":{}}}],["src/products/entities/category.entity.ts:25",{"_index":496,"title":{},"body":{"entities/Category.html":{}}}],["src/products/entities/category.entity.ts:7",{"_index":490,"title":{},"body":{"entities/Category.html":{}}}],["src/products/entities/product",{"_index":991,"title":{},"body":{"entities/ProductImage.html":{},"coverage.html":{}}}],["src/products/entities/product.entity.ts",{"_index":953,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/entities/product.entity.ts:10",{"_index":965,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:13",{"_index":972,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:16",{"_index":978,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:19",{"_index":963,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:22",{"_index":973,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:25",{"_index":964,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:28",{"_index":961,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:31",{"_index":977,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:34",{"_index":979,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:37",{"_index":971,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:40",{"_index":957,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:43",{"_index":959,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:46",{"_index":970,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:49",{"_index":976,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:52",{"_index":983,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:55",{"_index":960,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/product.entity.ts:58",{"_index":980,"title":{},"body":{"entities/Product.html":{}}}],["src/products/entities/review.entity.ts",{"_index":1050,"title":{},"body":{"entities/Review.html":{},"coverage.html":{}}}],["src/products/entities/review.entity.ts:11",{"_index":1058,"title":{},"body":{"entities/Review.html":{}}}],["src/products/entities/review.entity.ts:14",{"_index":1053,"title":{},"body":{"entities/Review.html":{}}}],["src/products/entities/review.entity.ts:17",{"_index":1060,"title":{},"body":{"entities/Review.html":{}}}],["src/products/entities/review.entity.ts:20",{"_index":1057,"title":{},"body":{"entities/Review.html":{}}}],["src/products/entities/review.entity.ts:23",{"_index":1054,"title":{},"body":{"entities/Review.html":{}}}],["src/products/entities/review.entity.ts:8",{"_index":1055,"title":{},"body":{"entities/Review.html":{}}}],["src/products/entities/variant.entity.ts",{"_index":1166,"title":{},"body":{"entities/Variant.html":{},"coverage.html":{}}}],["src/products/entities/variant.entity.ts:10",{"_index":1173,"title":{},"body":{"entities/Variant.html":{}}}],["src/products/entities/variant.entity.ts:13",{"_index":1174,"title":{},"body":{"entities/Variant.html":{}}}],["src/products/entities/variant.entity.ts:16",{"_index":1170,"title":{},"body":{"entities/Variant.html":{}}}],["src/products/entities/variant.entity.ts:19",{"_index":1172,"title":{},"body":{"entities/Variant.html":{}}}],["src/products/entities/variant.entity.ts:7",{"_index":1169,"title":{},"body":{"entities/Variant.html":{}}}],["src/products/products.controller.ts",{"_index":1002,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:13",{"_index":1004,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:18",{"_index":1005,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:23",{"_index":1006,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:28",{"_index":1009,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:33",{"_index":1007,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":1022,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":1030,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:15",{"_index":1034,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:20",{"_index":1035,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:24",{"_index":1036,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:32",{"_index":1038,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:38",{"_index":1037,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:9",{"_index":1032,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/users/dtos/create",{"_index":570,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/update",{"_index":1071,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":1078,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/entities/user.entity.ts:22",{"_index":1095,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:25",{"_index":1092,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:28",{"_index":1102,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:31",{"_index":1110,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:34",{"_index":1103,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:37",{"_index":1093,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:40",{"_index":1100,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:43",{"_index":1104,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:46",{"_index":1091,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:49",{"_index":1094,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:56",{"_index":1108,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:59",{"_index":1097,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:62",{"_index":1096,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:65",{"_index":1099,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:68",{"_index":1106,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:71",{"_index":1089,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:74",{"_index":1090,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:77",{"_index":1109,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":1121,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:11",{"_index":1124,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:16",{"_index":1125,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:21",{"_index":1126,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":1128,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":1127,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1140,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1144,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":1146,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":1148,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":1149,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":1150,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:36",{"_index":1152,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:46",{"_index":1151,"title":{},"body":{"injectables/UsersService.html":{}}}],["st",{"_index":514,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["stars",{"_index":1062,"title":{},"body":{"entities/Review.html":{}}}],["start",{"_index":1253,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1256,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1257,"title":{},"body":{"index.html":{}}}],["started",{"_index":1234,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1246,"title":{},"body":{"index.html":{}}}],["starts_at",{"_index":634,"title":{},"body":{"entities/Discount.html":{}}}],["state",{"_index":13,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{}}}],["statements",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":153,"title":{},"body":{"controllers/AddressController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{}}}],["stay",{"_index":1330,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1269,"title":{},"body":{"index.html":{}}}],["stock",{"_index":553,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["straightforward",{"_index":1286,"title":{},"body":{"index.html":{}}}],["street",{"_index":14,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{}}}],["string",{"_index":20,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Auth.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{}}}],["sub",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":92,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["summary",{"_index":152,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{}}}],["support",{"_index":1308,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1362,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1270,"title":{},"body":{"index.html":{}}}],["tax_total",{"_index":396,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["test",{"_index":1259,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1262,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1261,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1258,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1344,"title":{},"body":{"index.html":{}}}],["this.addressrepository.create",{"_index":213,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.delete",{"_index":233,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.find",{"_index":215,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.findone",{"_index":217,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.save(address",{"_index":214,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.save(updatedaddress",{"_index":229,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.create(createaddressdto",{"_index":155,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findallforuser(user",{"_index":157,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findoneforuser(id",{"_index":160,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.remove(id",{"_index":168,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.update(id",{"_index":163,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.appservice.gethello",{"_index":242,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authrepository.create",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authrepository.findone",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authrepository.save(user",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.login(logindto",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerdto",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cartrepository.create(cartdata",{"_index":475,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.delete(id",{"_index":483,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.find",{"_index":477,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.findone",{"_index":479,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.save(cart",{"_index":476,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartrepository.update(id",{"_index":481,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartservice.create(cartdata",{"_index":437,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findall",{"_index":438,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findone(id",{"_index":439,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.remove(id",{"_index":444,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.update(id",{"_index":443,"title":{},"body":{"controllers/CartController.html":{}}}],["this.customerrepository.create(customerdata",{"_index":622,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepository.delete(id",{"_index":628,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepository.find",{"_index":624,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepository.findone",{"_index":625,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepository.save(customer",{"_index":623,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepository.update(id",{"_index":627,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerservice.create(customerdata",{"_index":601,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findall",{"_index":602,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findone(id",{"_index":603,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.remove(id",{"_index":605,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.update(id",{"_index":604,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.discountrepository.create(discountdata",{"_index":684,"title":{},"body":{"injectables/DiscountService.html":{}}}],["this.discountrepository.delete(id",{"_index":690,"title":{},"body":{"injectables/DiscountService.html":{}}}],["this.discountrepository.find",{"_index":686,"title":{},"body":{"injectables/DiscountService.html":{}}}],["this.discountrepository.findone",{"_index":687,"title":{},"body":{"injectables/DiscountService.html":{}}}],["this.discountrepository.save(discount",{"_index":685,"title":{},"body":{"injectables/DiscountService.html":{}}}],["this.discountrepository.update(id",{"_index":689,"title":{},"body":{"injectables/DiscountService.html":{}}}],["this.discountservice.create(discountdata",{"_index":663,"title":{},"body":{"controllers/DiscountController.html":{}}}],["this.discountservice.findall",{"_index":664,"title":{},"body":{"controllers/DiscountController.html":{}}}],["this.discountservice.findone(id",{"_index":665,"title":{},"body":{"controllers/DiscountController.html":{}}}],["this.discountservice.remove(id",{"_index":667,"title":{},"body":{"controllers/DiscountController.html":{}}}],["this.discountservice.update(id",{"_index":666,"title":{},"body":{"controllers/DiscountController.html":{}}}],["this.findone(id",{"_index":482,"title":{},"body":{"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DiscountService.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["this.findoneforuser(id",{"_index":226,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.fulfillmentrepository.create(fulfillmentdata",{"_index":741,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["this.fulfillmentrepository.delete(id",{"_index":747,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["this.fulfillmentrepository.find",{"_index":743,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["this.fulfillmentrepository.findone",{"_index":744,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["this.fulfillmentrepository.save(fulfillment",{"_index":742,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["this.fulfillmentrepository.update(id",{"_index":746,"title":{},"body":{"injectables/FulfillmentService.html":{}}}],["this.fulfillmentservice.create(fulfillmentdata",{"_index":720,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["this.fulfillmentservice.findall",{"_index":721,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["this.fulfillmentservice.findone(id",{"_index":722,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["this.fulfillmentservice.remove(id",{"_index":724,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["this.fulfillmentservice.update(id",{"_index":723,"title":{},"body":{"controllers/FulfillmentController.html":{}}}],["this.jwtservice.sign(payload",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderitemsrepository.create",{"_index":889,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderitemsrepository.save(orderitems",{"_index":895,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.create",{"_index":878,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.find",{"_index":896,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.findoneby",{"_index":897,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.remove(order",{"_index":901,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.save(neworder",{"_index":881,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.save(order",{"_index":900,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.create(createorderdto",{"_index":847,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.findall",{"_index":848,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.findone(id",{"_index":849,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.remove(id",{"_index":851,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.update(id",{"_index":850,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.paymentrepository.create(paymentdata",{"_index":946,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.delete(id",{"_index":952,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.find",{"_index":948,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.findone",{"_index":949,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.save(payment",{"_index":947,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepository.update(id",{"_index":951,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice.create(paymentdata",{"_index":925,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.findall",{"_index":926,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.findone(id",{"_index":927,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.remove(id",{"_index":929,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.update(id",{"_index":928,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.productsrepository.create(createproductdto",{"_index":1040,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.find",{"_index":1042,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.findoneby",{"_index":1043,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.remove(product",{"_index":1045,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsrepository.save(product",{"_index":1041,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":1014,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":1015,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(id",{"_index":1016,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(itemdto.product_id",{"_index":886,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.productsservice.remove(id",{"_index":1018,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(id",{"_index":1017,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.usersrepository.create(createuserdto",{"_index":1154,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":1159,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby",{"_index":1160,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.remove(user",{"_index":1165,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":1158,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1132,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":1133,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1134,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":1136,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":1135,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validateuser(logindto.email",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":218,"title":{},"body":{"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":1323,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":1098,"title":{},"body":{"entities/User.html":{}}}],["token",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":397,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["totalamount",{"_index":533,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["totalorderprice",{"_index":884,"title":{},"body":{"injectables/OrdersService.html":{}}}],["touch",{"_index":1352,"title":{},"body":{"index.html":{}}}],["tracking_number",{"_index":695,"title":{},"body":{"entities/Fulfillment.html":{}}}],["tracking_url",{"_index":696,"title":{},"body":{"entities/Fulfillment.html":{}}}],["transformer",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":59,"title":{},"body":{"entities/Address-1.html":{},"modules/AppModule.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/Category.html":{},"classes/CreateProductDto.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"entities/User.html":{}}}],["try",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{}}}],["twitter",{"_index":1358,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"classes/LoginDto.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"coverage.html":{}}}],["typeorm",{"_index":43,"title":{},"body":{"entities/Address.html":{},"entities/Address-1.html":{},"injectables/AddressService.html":{},"entities/Auth.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"injectables/CartService.html":{},"entities/Category.html":{},"entities/Customer.html":{},"injectables/CustomerService.html":{},"entities/Discount.html":{},"injectables/DiscountService.html":{},"entities/Fulfillment.html":{},"injectables/FulfillmentService.html":{},"entities/Order.html":{},"entities/OrderAddress.html":{},"entities/OrderItem.html":{},"injectables/OrdersService.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"entities/Product.html":{},"entities/ProductImage.html":{},"injectables/ProductsService.html":{},"entities/Review.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"entities/Variant.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":185,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([address",{"_index":189,"title":{},"body":{"modules/AddressModule.html":{}}}],["typeormmodule.forfeature([auth",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([cart",{"_index":464,"title":{},"body":{"modules/CartModule.html":{}}}],["typeormmodule.forfeature([customer",{"_index":611,"title":{},"body":{"modules/CustomerModule.html":{}}}],["typeormmodule.forfeature([discount",{"_index":673,"title":{},"body":{"modules/DiscountModule.html":{}}}],["typeormmodule.forfeature([fulfillment",{"_index":730,"title":{},"body":{"modules/FulfillmentModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":859,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([payment",{"_index":935,"title":{},"body":{"modules/PaymentModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":1029,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1143,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1076,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1245,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":104,"title":{},"body":{"controllers/AddressController.html":{},"classes/CreateOrderDto.html":{},"entities/Order.html":{},"entities/User.html":{}}}],["unique",{"_index":298,"title":{},"body":{"entities/Auth.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["unit",{"_index":893,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["unit_price",{"_index":449,"title":{},"body":{"entities/CartItem.html":{},"entities/OrderItem.html":{},"injectables/OrdersService.html":{}}}],["unknown",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/PaymentController.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1370,"title":{},"body":{"properties.html":{}}}],["update",{"_index":83,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":442,"title":{},"body":{"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DiscountController.html":{},"controllers/FulfillmentController.html":{},"controllers/OrdersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":116,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateaddressdto",{"_index":117,"title":{"classes/UpdateAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["updated",{"_index":119,"title":{},"body":{"controllers/AddressController.html":{}}}],["updated_at",{"_index":289,"title":{},"body":{"entities/Auth.html":{},"entities/Cart.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/Payment.html":{}}}],["updatedaddress",{"_index":227,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatedat",{"_index":15,"title":{},"body":{"entities/Address.html":{},"entities/Category.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["updatedata",{"_index":428,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DiscountController.html":{},"injectables/DiscountService.html":{},"controllers/FulfillmentController.html":{},"injectables/FulfillmentService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["updatedatecolumn",{"_index":34,"title":{},"body":{"entities/Address.html":{},"entities/Auth.html":{},"entities/Cart.html":{},"entities/Category.html":{},"entities/Customer.html":{},"entities/Discount.html":{},"entities/Fulfillment.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["updateorderdto",{"_index":838,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updateproductdto",{"_index":1008,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":1332,"title":{},"body":{"index.html":{}}}],["updateuserdto",{"_index":1070,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto.password",{"_index":1162,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":994,"title":{},"body":{"entities/ProductImage.html":{}}}],["usa",{"_index":506,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["use",{"_index":860,"title":{},"body":{"modules/OrdersModule.html":{}}}],["useguards",{"_index":126,"title":{},"body":{"controllers/AddressController.html":{}}}],["useguards(jwtauthguard",{"_index":148,"title":{},"body":{"controllers/AddressController.html":{}}}],["user",{"_index":16,"title":{"entities/User.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Order.html":{},"classes/RegisterDto.html":{},"entities/Review.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'})@apiresponse({status",{"_index":89,"title":{},"body":{"controllers/AddressController.html":{}}}],["user.addresses",{"_index":37,"title":{},"body":{"entities/Address.html":{}}}],["user.decorator",{"_index":146,"title":{},"body":{"controllers/AddressController.html":{}}}],["user.decorator.ts",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":1077,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":571,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":574,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":573,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":572,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":1073,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":216,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["user.password",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.passwordhash",{"_index":1156,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.reviews",{"_index":1059,"title":{},"body":{"entities/Review.html":{}}}],["user.role",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["userrole",{"_index":1107,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.customer",{"_index":1119,"title":{},"body":{"entities/User.html":{}}}],["users",{"_index":1122,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1141,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1130,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":41,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"entities/Order.html":{},"entities/Review.html":{}}}],["users/users.module",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1120,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":255,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":1147,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":1129,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1324,"title":{},"body":{"index.html":{}}}],["validateuser",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":524,"title":{},"body":{"classes/CreateAddressDto.html":{},"dependencies.html":{}}}],["value",{"_index":1168,"title":{},"body":{"entities/Variant.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{}}}],["variables",{"_index":1371,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":981,"title":{"entities/Variant.html":{}},"body":{"entities/Product.html":{},"modules/ProductsModule.html":{},"entities/Variant.html":{},"coverage.html":{}}}],["variant.entity",{"_index":987,"title":{},"body":{"entities/Product.html":{}}}],["variant.product",{"_index":982,"title":{},"body":{"entities/Product.html":{}}}],["variants",{"_index":956,"title":{},"body":{"entities/Product.html":{}}}],["version",{"_index":1368,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1316,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1305,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1319,"title":{},"body":{"index.html":{}}}],["watch",{"_index":1254,"title":{},"body":{"index.html":{}}}],["website",{"_index":1356,"title":{},"body":{"index.html":{}}}],["working",{"_index":1304,"title":{},"body":{"index.html":{}}}],["world",{"_index":284,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1334,"title":{},"body":{"index.html":{}}}],["xl",{"_index":1178,"title":{},"body":{"entities/Variant.html":{}}}],["you'd",{"_index":1348,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1263,"title":{},"body":{"index.html":{}}}],["your_jwt_secret_key",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["zip",{"_index":518,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["zipcode",{"_index":17,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{}}}],["zoom",{"_index":181,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CustomerModule.html":{},"modules/DiscountModule.html":{},"modules/FulfillmentModule.html":{},"modules/OrdersModule.html":{},"modules/PaymentModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Address.html":{"url":"entities/Address.html","title":"entity - Address","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/entities/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                street\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.addresses)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from '../../users/entities/user.entity';\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Address {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  street: string;\n\n  @Column()\n  city: string;\n\n  @Column()\n  state: string;\n\n  @Column()\n  zipCode: string;\n\n  @Column()\n  country: string;\n\n  @ManyToOne(() => User, (user) => user.addresses)\n  user: User;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Address-1.html":{"url":"entities/Address-1.html","title":"entity - Address-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address_1\n                            \n                            \n                                    \n                                address_2\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country_code\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                postal_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postal_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/address.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Address {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  first_name: string;\n\n  @Column({ nullable: true })\n  last_name: string;\n\n  @Column({ nullable: true })\n  address_1: string;\n\n  @Column({ nullable: true })\n  address_2: string;\n\n  @Column({ nullable: true })\n  city: string;\n\n  @Column({ nullable: true })\n  postal_code: string;\n\n  @Column({ nullable: true })\n  country_code: string;\n\n  @Column({ nullable: true })\n  phone: string;\n\n  @Column({ nullable: true })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressController.html":{"url":"controllers/AddressController.html","title":"controller - AddressController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                address\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAddressDto: CreateAddressDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new address for the authenticated user'})@ApiResponse({status: 201, description: 'The address has been successfully created.', type: Address})\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAddressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all addresses for the authenticated user'})@ApiResponse({status: 200, description: 'Return all addresses for the user.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get an address by ID for the authenticated user'})@ApiResponse({status: 200, description: 'Return a single address.', type: Address})\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete an address for the authenticated user'})@ApiResponse({status: 204, description: 'The address has been successfully deleted.'})\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateAddressDto: UpdateAddressDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update an address for the authenticated user'})@ApiResponse({status: 200, description: 'The address has been successfully updated.', type: Address})\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAddressDto\n                                            \n                                                            UpdateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseIntPipe,\n  UseGuards,\n  HttpCode,\n  HttpStatus,\n} from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { CreateAddressDto } from './dto/create-address.dto';\nimport { UpdateAddressDto } from './dto/update-address.dto';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { Address } from './entities/address.entity';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { GetUser } from '../auth/decorators/get-user.decorator';\nimport { User } from '../users/entities/user.entity';\n\n@ApiTags('address')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard)\n@Controller('address')\nexport class AddressController {\n  constructor(private readonly addressService: AddressService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new address for the authenticated user' })\n  @ApiResponse({ status: 201, description: 'The address has been successfully created.', type: Address })\n  create(@Body() createAddressDto: CreateAddressDto, @GetUser() user: User) {\n    return this.addressService.create(createAddressDto, user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all addresses for the authenticated user' })\n  @ApiResponse({ status: 200, description: 'Return all addresses for the user.', type: [Address] })\n  findAll(@GetUser() user: User) {\n    return this.addressService.findAllForUser(user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get an address by ID for the authenticated user' })\n  @ApiResponse({ status: 200, description: 'Return a single address.', type: Address })\n  findOne(@Param('id', ParseIntPipe) id: number, @GetUser() user: User) {\n    return this.addressService.findOneForUser(id, user);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update an address for the authenticated user' })\n  @ApiResponse({ status: 200, description: 'The address has been successfully updated.', type: Address })\n  update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateAddressDto: UpdateAddressDto,\n    @GetUser() user: User,\n  ) {\n    return this.addressService.update(id, updateAddressDto, user);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Delete an address for the authenticated user' })\n  @ApiResponse({ status: 204, description: 'The address has been successfully deleted.' })\n  async remove(@Param('id', ParseIntPipe) id: number, @GetUser() user: User) {\n    await this.addressService.remove(id, user);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressModule.html":{"url":"modules/AddressModule.html","title":"module - AddressModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_exports\n\n\n\ncluster_AddressModule_providers\n\n\n\n\nAddressService \n\nAddressService \n\n\n\nAddressModule\n\nAddressModule\n\nAddressService  -->\n\nAddressModule->AddressService \n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/address/address.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AddressService } from './address.service';\nimport { AddressController } from './address.controller';\nimport { Address } from './entities/address.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Address])],\n  controllers: [AddressController],\n  providers: [AddressService],\n  exports: [AddressService],\n})\nexport class AddressModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneForUser\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/address/address.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAddressDto: CreateAddressDto, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAddressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \nfindAllForUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneForUser(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateAddressDto: UpdateAddressDto, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAddressDto\n                                            \n                                                            UpdateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAddressDto } from './dto/create-address.dto';\nimport { UpdateAddressDto } from './dto/update-address.dto';\nimport { Address } from './entities/address.entity';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class AddressService {\n  constructor(\n    @InjectRepository(Address)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  create(createAddressDto: CreateAddressDto, user: User): Promise {\n    const address = this.addressRepository.create({\n      ...createAddressDto,\n      user,\n    });\n    return this.addressRepository.save(address);\n  }\n\n  findAllForUser(user: User): Promise {\n    return this.addressRepository.find({\n      where: { user: { id: user.id } },\n    });\n  }\n\n  async findOneForUser(id: number, user: User): Promise {\n    const address = await this.addressRepository.findOne({\n      where: { id, user: { id: user.id } },\n    });\n    if (!address) {\n      throw new NotFoundException(`Address with ID \"${id}\" not found`);\n    }\n    return address;\n  }\n\n  async update(\n    id: number,\n    updateAddressDto: UpdateAddressDto,\n    user: User,\n  ): Promise {\n    // This check ensures the user owns the address before attempting to update\n    const address = await this.findOneForUser(id, user);\n\n    const updatedAddress = Object.assign(address, updateAddressDto);\n\n    return this.addressRepository.save(updatedAddress);\n  }\n\n  async remove(id: number, user: User): Promise {\n    // This will delete the address only if it belongs to the provided user\n    const result = await this.addressRepository.delete({ id, user: { id: user.id } });\n\n    if (result.affected === 0) {\n      throw new NotFoundException(`Address with ID \"${id}\" not found`);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nDiscountModule\n\nDiscountModule\n\nAppModule -->\n\nDiscountModule->AppModule\n\n\n\n\n\nFulfillmentModule\n\nFulfillmentModule\n\nAppModule -->\n\nFulfillmentModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            CustomerModule\n                        \n                        \n                            DiscountModule\n                        \n                        \n                            FulfillmentModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductsModule } from './products/products.module';\nimport { UsersModule } from './users/users.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { AuthModule } from './auth/auth.module';\nimport { CartModule } from './cart/cart.module';\nimport { CustomerModule } from './customer/customer.module';\nimport { PaymentModule } from './payment/payment.module';\nimport { FulfillmentModule } from './fulfillment/fulfillment.module';\nimport { DiscountModule } from './discount/discount.module';\nimport { AddressModule } from './address/address.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      port: 5432,\n      username: 'postgres',\n      password: '54321',\n      database: 'ecommerce_db',\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    ProductsModule,\n    UsersModule,\n    OrdersModule,\n    AuthModule,\n    CartModule,\n    CustomerModule,\n    PaymentModule,\n    FulfillmentModule,\n    DiscountModule,\n    AddressModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Auth.html":{"url":"entities/Auth.html","title":"entity - Auth","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Auth {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column({ default: 'user' })\n  role: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOperation({summary: 'Login user and get JWT token'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'Register a new user'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dtos/register.dto';\nimport { LoginDto } from './dtos/login.dto';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  @ApiOperation({ summary: 'Register a new user' })\n  async register(@Body() registerDto: RegisterDto) {\n    try {\n      const user = await this.authService.register(registerDto);\n      return { message: 'User registered successfully', user };\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Post('login')\n  @ApiOperation({ summary: 'Login user and get JWT token' })\n  async login(@Body() loginDto: LoginDto) {\n    try {\n      const token = await this.authService.login(loginDto);\n      return token;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.UNAUTHORIZED);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { Auth } from './entities/auth.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Auth]),\n    PassportModule,\n    JwtModule.register({\n      secret: 'your_jwt_secret_key', // Replace with environment variable in production\n      signOptions: { expiresIn: '1h' },\n    }),\n  ],\n  providers: [AuthService],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Auth } from './entities/auth.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { RegisterDto } from './dtos/register.dto';\nimport { LoginDto } from './dtos/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(Auth)\n    private authRepository: Repository,\n    private jwtService: JwtService,\n  ) {}\n\n  async register(registerDto: RegisterDto): Promise {\n    const { email, password, role } = registerDto;\n    const hashedPassword = await bcrypt.hash(password, 10);\n    const user = this.authRepository.create({\n      email,\n      password: hashedPassword,\n      role,\n    });\n    return this.authRepository.save(user);\n  }\n\n  async validateUser(email: string, password: string): Promise {\n    const user = await this.authRepository.findOne({ where: { email } });\n    if (user && (await bcrypt.compare(password, user.password))) {\n      return user;\n    }\n    return null;\n  }\n\n  async login(loginDto: LoginDto): Promise {\n    const user = await this.validateUser(loginDto.email, loginDto.password);\n    if (!user) {\n      throw new Error('Invalid credentials');\n    }\n    const payload = { email: user.email, sub: user.id, role: user.role };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cart.html":{"url":"entities/Cart.html","title":"entity - Cart","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                currency_code\n                            \n                            \n                                    \n                                customer_id\n                            \n                            \n                                    \n                                discount_total\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                region_id\n                            \n                            \n                                    \n                                shipping_total\n                            \n                            \n                                    \n                                tax_total\n                            \n                            \n                                    \n                                total\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.cart)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shipping_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tax_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToMany } from 'typeorm';\nimport { CartItem } from './cart-item.entity';\n\n@Entity()\nexport class Cart {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  customer_id: string;\n\n  @Column({ nullable: true })\n  email: string;\n\n  @Column({ nullable: true })\n  region_id: string;\n\n  @Column({ nullable: true })\n  currency_code: string;\n\n  @Column('decimal', { nullable: true })\n  tax_total: number;\n\n  @Column('decimal', { nullable: true })\n  shipping_total: number;\n\n  @Column('decimal', { nullable: true })\n  discount_total: number;\n\n  @Column('decimal', { nullable: true })\n  total: number;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @OneToMany(() => CartItem, item => item.cart)\n  items: CartItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(cartData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new cart'})\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all carts'})\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get cart by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete cart by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update cart by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Put, Delete, HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { CartService } from './cart.service';\nimport { Cart } from './entities/cart.entity';\n\n@ApiTags('cart')\n@Controller('cart')\nexport class CartController {\n  constructor(private readonly cartService: CartService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new cart' })\n  async create(@Body() cartData: Partial) {\n    try {\n      const cart = await this.cartService.create(cartData);\n      return cart;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all carts' })\n  async findAll() {\n    return this.cartService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get cart by ID' })\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.cartService.findOne(id);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\n    }\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Update cart by ID' })\n  async update(@Param('id') id: string, @Body() updateData: Partial) {\n    try {\n      return await this.cartService.update(id, updateData);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete cart by ID' })\n  async remove(@Param('id') id: string) {\n    try {\n      await this.cartService.remove(id);\n      return { message: 'Cart deleted successfully' };\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CartItem.html":{"url":"entities/CartItem.html","title":"entity - CartItem","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart-item.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cart\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product_id\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                unit_price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cart => cart.items)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unit_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart-item.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { Cart } from './cart.entity';\n\n@Entity()\nexport class CartItem {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  product_id: string;\n\n  @Column('int')\n  quantity: number;\n\n  @Column('decimal')\n  unit_price: number;\n\n  @ManyToOne(() => Cart, cart => cart.items)\n  cart: Cart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CartModule_exports\n\n\n\n\nCartService \n\nCartService \n\n\n\nCartModule\n\nCartModule\n\nCartService  -->\n\nCartModule->CartService \n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CartService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CartService } from './cart.service';\nimport { CartController } from './cart.controller';\nimport { Cart } from './entities/cart.entity';\nimport { CartItem } from './entities/cart-item.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Cart, CartItem])],\n  providers: [CartService],\n  controllers: [CartController],\n  exports: [CartService],\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/cart/cart.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(cartData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Cart } from './entities/cart.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class CartService {\n  constructor(\n    @InjectRepository(Cart)\n    private cartRepository: Repository,\n  ) {}\n\n  async create(cartData: Partial): Promise {\n    const cart = this.cartRepository.create(cartData);\n    return this.cartRepository.save(cart);\n  }\n\n  async findAll(): Promise {\n    return this.cartRepository.find({ relations: ['items'] });\n  }\n\n  async findOne(id: string): Promise {\n    const cart = await this.cartRepository.findOne({ where: { id }, relations: ['items'] });\n    if (!cart) {\n      throw new Error('Cart not found');\n    }\n    return cart;\n  }\n\n  async update(id: string, updateData: Partial): Promise {\n    await this.cartRepository.update(id, updateData);\n    return this.findOne(id);\n  }\n\n  async remove(id: string): Promise {\n    await this.cartRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Category.html":{"url":"entities/Category.html","title":"entity - Category","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/entities/category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                products\n                            \n                            \n                                    \n                                slug\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/category.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/category.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/category.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/category.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, product => product.category)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/category.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/category.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/category.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToMany, CreateDateColumn, UpdateDateColumn } from 'typeorm';\nimport { Product } from './product.entity';\n\n@Entity()\nexport class Category {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: string;\n\n  @Column({ unique: true })\n  name: string;\n\n  @Column({ unique: true })\n  slug: string;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @OneToMany(() => Product, (product) => product.category)\n  products: Product[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAddressDto.html":{"url":"classes/CreateAddressDto.html","title":"class - CreateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/dto/create-address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                    \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Anytown', description: 'The city'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'USA', description: 'The country'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'CA', description: 'The state or province'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123 Main St', description: 'The street address'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345', description: 'The zip or postal code'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAddressDto {\n  @ApiProperty({ example: '123 Main St', description: 'The street address' })\n  @IsString()\n  @IsNotEmpty()\n  street: string;\n\n  @ApiProperty({ example: 'Anytown', description: 'The city' })\n  @IsString()\n  @IsNotEmpty()\n  city: string;\n\n  @ApiProperty({ example: 'CA', description: 'The state or province' })\n  @IsString()\n  @IsNotEmpty()\n  state: string;\n\n  @ApiProperty({ example: '12345', description: 'The zip or postal code' })\n  @IsString()\n  @IsNotEmpty()\n  zipCode: string;\n\n  @ApiProperty({ example: 'USA', description: 'The country' })\n  @IsString()\n  @IsNotEmpty()\n  country: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dtos/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                customerId\n                            \n                            \n                                    \n                                    Optional\n                                items\n                            \n                            \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                totalAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/create-order.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOrderItemDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/create-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/create-order.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/create-order.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateOrderItemDto {\n  @ApiProperty()\n  product_id: string;\n\n  @ApiProperty()\n  quantity: number;\n}\n\nexport class CreateOrderDto {\n  @ApiProperty()\n  customerId: string;\n\n  @ApiProperty()\n  totalAmount: number;\n\n  @ApiProperty({ default: 'pending' })\n  status?: string;\n\n  @ApiProperty({ type: [CreateOrderItemDto] })\n  items?: CreateOrderItemDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderItemDto.html":{"url":"classes/CreateOrderItemDto.html","title":"class - CreateOrderItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dtos/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                product_id\n                            \n                            \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/create-order.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dtos/create-order.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateOrderItemDto {\n  @ApiProperty()\n  product_id: string;\n\n  @ApiProperty()\n  quantity: number;\n}\n\nexport class CreateOrderDto {\n  @ApiProperty()\n  customerId: string;\n\n  @ApiProperty()\n  totalAmount: number;\n\n  @ApiProperty({ default: 'pending' })\n  status?: string;\n\n  @ApiProperty({ type: [CreateOrderItemDto] })\n  items?: CreateOrderItemDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                brand\n                            \n                            \n                                    \n                                    Optional\n                                currency\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                discountPrice\n                            \n                            \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                sku\n                            \n                            \n                                    \n                                slug\n                            \n                            \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({default: 'INR'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        discountPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sku\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  slug: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  price: number;\n\n  @ApiProperty({ required: false })\n  discountPrice?: number;\n\n  @ApiProperty({ default: 'INR' })\n  currency?: string;\n\n  @ApiProperty()\n  sku: string;\n\n  @ApiProperty()\n  stock: number;\n\n  @ApiProperty({ default: true })\n  isActive?: boolean;\n\n  @ApiProperty({ required: false })\n  brand?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  username: string;\n  password: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Customer.html":{"url":"entities/Customer.html","title":"entity - Customer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/entities/customer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                password_hash\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Customer {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  first_name: string;\n\n  @Column({ nullable: true })\n  last_name: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column({ nullable: true })\n  phone: string;\n\n  @Column({ nullable: true })\n  password_hash: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerController.html":{"url":"controllers/CustomerController.html","title":"controller - CustomerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(customerData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new customer'})\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customerData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all customers'})\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get customer by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete customer by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update customer by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Put, Delete, HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { CustomerService } from './customer.service';\nimport { Customer } from './entities/customer.entity';\n\n@ApiTags('customer')\n@Controller('customer')\nexport class CustomerController {\n  constructor(private readonly customerService: CustomerService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new customer' })\n  async create(@Body() customerData: Partial) {\n    try {\n      const customer = await this.customerService.create(customerData);\n      return customer;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all customers' })\n  async findAll() {\n    return this.customerService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get customer by ID' })\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.customerService.findOne(id);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\n    }\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Update customer by ID' })\n  async update(@Param('id') id: string, @Body() updateData: Partial) {\n    try {\n      return await this.customerService.update(id, updateData);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete customer by ID' })\n  async remove(@Param('id') id: string) {\n    try {\n      await this.customerService.remove(id);\n      return { message: 'Customer deleted successfully' };\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nCustomerService \n\nCustomerService \n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomerController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CustomerService } from './customer.service';\nimport { CustomerController } from './customer.controller';\nimport { Customer } from './entities/customer.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Customer])],\n  providers: [CustomerService],\n  controllers: [CustomerController],\n  exports: [CustomerService],\n})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customerRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/customer/customer.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(customerData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customerData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Customer } from './entities/customer.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class CustomerService {\n  constructor(\n    @InjectRepository(Customer)\n    private customerRepository: Repository,\n  ) {}\n\n  async create(customerData: Partial): Promise {\n    const customer = this.customerRepository.create(customerData);\n    return this.customerRepository.save(customer);\n  }\n\n  async findAll(): Promise {\n    return this.customerRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const customer = await this.customerRepository.findOne({ where: { id } });\n    if (!customer) {\n      throw new Error('Customer not found');\n    }\n    return customer;\n  }\n\n  async update(id: string, updateData: Partial): Promise {\n    await this.customerRepository.update(id, updateData);\n    return this.findOne(id);\n  }\n\n  async remove(id: string): Promise {\n    await this.customerRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Discount.html":{"url":"entities/Discount.html","title":"entity - Discount","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discount/entities/discount.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                ends_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                is_active\n                            \n                            \n                                    \n                                starts_at\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ends_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        starts_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/discount/entities/discount.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Discount {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  code: string;\n\n  @Column('decimal')\n  amount: number;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @Column()\n  type: string; // e.g., percentage, fixed_amount\n\n  @Column({ nullable: true })\n  starts_at: Date;\n\n  @Column({ nullable: true })\n  ends_at: Date;\n\n  @Column({ default: true })\n  is_active: boolean;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DiscountController.html":{"url":"controllers/DiscountController.html","title":"controller - DiscountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DiscountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discount/discount.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                discount\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(discountData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new discount'})\n                \n            \n\n                    \n                        \n                            Defined in src/discount/discount.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                discountData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all discounts'})\n                \n            \n\n                    \n                        \n                            Defined in src/discount/discount.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get discount by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/discount/discount.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete discount by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/discount/discount.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update discount by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/discount/discount.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Put, Delete, HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { DiscountService } from './discount.service';\nimport { Discount } from './entities/discount.entity';\n\n@ApiTags('discount')\n@Controller('discount')\nexport class DiscountController {\n  constructor(private readonly discountService: DiscountService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new discount' })\n  async create(@Body() discountData: Partial) {\n    try {\n      const discount = await this.discountService.create(discountData);\n      return discount;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all discounts' })\n  async findAll() {\n    return this.discountService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get discount by ID' })\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.discountService.findOne(id);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\n    }\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Update discount by ID' })\n  async update(@Param('id') id: string, @Body() updateData: Partial) {\n    try {\n      return await this.discountService.update(id, updateData);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete discount by ID' })\n  async remove(@Param('id') id: string) {\n    try {\n      await this.discountService.remove(id);\n      return { message: 'Discount deleted successfully' };\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscountModule.html":{"url":"modules/DiscountModule.html","title":"module - DiscountModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscountModule\n\n\n\ncluster_DiscountModule_exports\n\n\n\ncluster_DiscountModule_providers\n\n\n\n\nDiscountService \n\nDiscountService \n\n\n\nDiscountModule\n\nDiscountModule\n\nDiscountService  -->\n\nDiscountModule->DiscountService \n\n\n\n\n\nDiscountService\n\nDiscountService\n\nDiscountModule -->\n\nDiscountService->DiscountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/discount/discount.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscountService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiscountController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscountService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DiscountService } from './discount.service';\nimport { DiscountController } from './discount.controller';\nimport { Discount } from './entities/discount.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Discount])],\n  providers: [DiscountService],\n  controllers: [DiscountController],\n  exports: [DiscountService],\n})\nexport class DiscountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscountService.html":{"url":"injectables/DiscountService.html","title":"injectable - DiscountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discount/discount.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discountRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/discount/discount.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discountRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(discountData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discount/discount.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                discountData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/discount/discount.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discount/discount.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discount/discount.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/discount/discount.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Discount } from './entities/discount.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DiscountService {\n  constructor(\n    @InjectRepository(Discount)\n    private discountRepository: Repository,\n  ) {}\n\n  async create(discountData: Partial): Promise {\n    const discount = this.discountRepository.create(discountData);\n    return this.discountRepository.save(discount);\n  }\n\n  async findAll(): Promise {\n    return this.discountRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const discount = await this.discountRepository.findOne({ where: { id } });\n    if (!discount) {\n      throw new Error('Discount not found');\n    }\n    return discount;\n  }\n\n  async update(id: string, updateData: Partial): Promise {\n    await this.discountRepository.update(id, updateData);\n    return this.findOne(id);\n  }\n\n  async remove(id: string): Promise {\n    await this.discountRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Fulfillment.html":{"url":"entities/Fulfillment.html","title":"entity - Fulfillment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Fulfillment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fulfillment/entities/fulfillment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                order_id\n                            \n                            \n                                    \n                                provider_id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                tracking_number\n                            \n                            \n                                    \n                                tracking_url\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tracking_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tracking_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fulfillment/entities/fulfillment.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Fulfillment {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  order_id: string;\n\n  @Column()\n  provider_id: string;\n\n  @Column()\n  status: string;\n\n  @Column({ nullable: true })\n  tracking_number: string;\n\n  @Column({ nullable: true })\n  tracking_url: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FulfillmentController.html":{"url":"controllers/FulfillmentController.html","title":"controller - FulfillmentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FulfillmentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fulfillment/fulfillment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fulfillment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(fulfillmentData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new fulfillment'})\n                \n            \n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fulfillmentData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all fulfillments'})\n                \n            \n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get fulfillment by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete fulfillment by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update fulfillment by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Put, Delete, HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { FulfillmentService } from './fulfillment.service';\nimport { Fulfillment } from './entities/fulfillment.entity';\n\n@ApiTags('fulfillment')\n@Controller('fulfillment')\nexport class FulfillmentController {\n  constructor(private readonly fulfillmentService: FulfillmentService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new fulfillment' })\n  async create(@Body() fulfillmentData: Partial) {\n    try {\n      const fulfillment = await this.fulfillmentService.create(fulfillmentData);\n      return fulfillment;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all fulfillments' })\n  async findAll() {\n    return this.fulfillmentService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get fulfillment by ID' })\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.fulfillmentService.findOne(id);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\n    }\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Update fulfillment by ID' })\n  async update(@Param('id') id: string, @Body() updateData: Partial) {\n    try {\n      return await this.fulfillmentService.update(id, updateData);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete fulfillment by ID' })\n  async remove(@Param('id') id: string) {\n    try {\n      await this.fulfillmentService.remove(id);\n      return { message: 'Fulfillment deleted successfully' };\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FulfillmentModule.html":{"url":"modules/FulfillmentModule.html","title":"module - FulfillmentModule","body":"\n                   \n\n\n\n\n    Modules\n    FulfillmentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FulfillmentModule\n\n\n\ncluster_FulfillmentModule_exports\n\n\n\ncluster_FulfillmentModule_providers\n\n\n\n\nFulfillmentService \n\nFulfillmentService \n\n\n\nFulfillmentModule\n\nFulfillmentModule\n\nFulfillmentService  -->\n\nFulfillmentModule->FulfillmentService \n\n\n\n\n\nFulfillmentService\n\nFulfillmentService\n\nFulfillmentModule -->\n\nFulfillmentService->FulfillmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fulfillment/fulfillment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FulfillmentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FulfillmentController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FulfillmentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FulfillmentService } from './fulfillment.service';\nimport { FulfillmentController } from './fulfillment.controller';\nimport { Fulfillment } from './entities/fulfillment.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Fulfillment])],\n  providers: [FulfillmentService],\n  controllers: [FulfillmentController],\n  exports: [FulfillmentService],\n})\nexport class FulfillmentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FulfillmentService.html":{"url":"injectables/FulfillmentService.html","title":"injectable - FulfillmentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FulfillmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fulfillment/fulfillment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fulfillmentRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/fulfillment/fulfillment.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fulfillmentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(fulfillmentData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fulfillmentData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fulfillment/fulfillment.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Fulfillment } from './entities/fulfillment.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class FulfillmentService {\n  constructor(\n    @InjectRepository(Fulfillment)\n    private fulfillmentRepository: Repository,\n  ) {}\n\n  async create(fulfillmentData: Partial): Promise {\n    const fulfillment = this.fulfillmentRepository.create(fulfillmentData);\n    return this.fulfillmentRepository.save(fulfillment);\n  }\n\n  async findAll(): Promise {\n    return this.fulfillmentRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const fulfillment = await this.fulfillmentRepository.findOne({ where: { id } });\n    if (!fulfillment) {\n      throw new Error('Fulfillment not found');\n    }\n    return fulfillment;\n  }\n\n  async update(id: string, updateData: Partial): Promise {\n    await this.fulfillmentRepository.update(id, updateData);\n    return this.findOne(id);\n  }\n\n  async remove(id: string): Promise {\n    await this.fulfillmentRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                billing_address\n                            \n                            \n                                    \n                                billing_address_id\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                currency_code\n                            \n                            \n                                    \n                                customer\n                            \n                            \n                                    \n                                discount_total\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fulfillment_status\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                payment_status\n                            \n                            \n                                    \n                                    \n                                shipping_address\n                            \n                            \n                                    \n                                shipping_address_id\n                            \n                            \n                                    \n                                shipping_total\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                tax_total\n                            \n                            \n                                    \n                                total\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        billing_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderAddress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'billing_address_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        billing_address_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fulfillment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.order)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shipping_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderAddress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'shipping_address_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shipping_address_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shipping_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: OrderStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tax_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { OrderItem } from './order-item.entity';\nimport { OrderAddress } from './order-address.entity';\nimport { User } from '../../users/entities/user.entity';\n\nexport enum OrderStatus {\n  PENDING = 'pending',\n  PAID = 'paid',\n  SHIPPED = 'shipped',\n  DELIVERED = 'delivered',\n  CANCELLED = 'cancelled',\n}\n\n@Entity()\nexport class Order {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ type: 'enum', enum: OrderStatus, default: OrderStatus.PENDING })\n  status: OrderStatus;\n\n  @Column({ nullable: true })\n  currency_code: string;\n\n  @Column({ nullable: true })\n  email: string;\n\n  @Column({ nullable: true })\n  billing_address_id: string;\n\n  @Column({ nullable: true })\n  shipping_address_id: string;\n\n  @Column({ nullable: true })\n  payment_status: string;\n\n  @Column({ nullable: true })\n  fulfillment_status: string;\n\n  @Column('decimal', { nullable: true })\n  discount_total: number;\n\n  @Column('decimal', { nullable: true })\n  shipping_total: number;\n\n  @Column('decimal', { nullable: true })\n  tax_total: number;\n\n  @Column('decimal', { nullable: true })\n  total: number;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n\n  @OneToMany(() => OrderItem, item => item.order)\n  items: OrderItem[];\n\n  @ManyToOne(() => OrderAddress)\n  @JoinColumn({ name: 'billing_address_id' })\n  billing_address: OrderAddress;\n\n  @ManyToOne(() => OrderAddress)\n  @JoinColumn({ name: 'shipping_address_id' })\n  shipping_address: OrderAddress;\n\n  @ManyToOne(() => User)\n  customer: User;\n\n  // @OneToMany(() => Discount, discount => discount.order)\n  // discounts: Discount[];\n\n  // @OneToMany(() => Payment, payment => payment.order)\n  // payments: Payment[];\n\n  // @OneToMany(() => ShippingMethod, shippingMethod => shippingMethod.order)\n  // shipping_methods: ShippingMethod[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrderAddress.html":{"url":"entities/OrderAddress.html","title":"entity - OrderAddress","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrderAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order-address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address_1\n                            \n                            \n                                    \n                                address_2\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                country_code\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                postal_code\n                            \n                            \n                                    \n                                province\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postal_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-address.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class OrderAddress {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  first_name: string;\n\n  @Column({ nullable: true })\n  last_name: string;\n\n  @Column({ nullable: true })\n  company: string;\n\n  @Column({ nullable: true })\n  address_1: string;\n\n  @Column({ nullable: true })\n  address_2: string;\n\n  @Column({ nullable: true })\n  city: string;\n\n  @Column({ nullable: true })\n  country_code: string;\n\n  @Column({ nullable: true })\n  province: string;\n\n  @Column({ nullable: true })\n  postal_code: string;\n\n  @Column({ nullable: true })\n  phone: string;\n\n  @Column({ nullable: true })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrderItem.html":{"url":"entities/OrderItem.html","title":"entity - OrderItem","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrderItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order-item.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                order\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                unit_price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, order => order.items)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unit_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { Order } from './order.entity';\nimport { Product } from '../../products/entities/product.entity';\n\n@Entity()\nexport class OrderItem {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => Product, { eager: true }) // Eager load product details for convenience\n  product: Product;\n\n  @Column('int')\n  quantity: number;\n\n  @Column('decimal')\n  unit_price: number;\n\n  @ManyToOne(() => Order, order => order.items)\n  order: Order;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new order'})\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all orders'})\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get order by id'})\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete an order'})\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOrderDto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update an order'})\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            UpdateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dtos/create-order.dto';\nimport { UpdateOrderDto } from './dtos/update-order.dto';\n\n@ApiTags('orders')\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new order' })\n  create(@Body() createOrderDto: CreateOrderDto) {\n    return this.ordersService.create(createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all orders' })\n  findAll() {\n    return this.ordersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get order by id' })\n  findOne(@Param('id') id: string) {\n    return this.ordersService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update an order' })\n  update(@Param('id') id: string, @Body() updateOrderDto: UpdateOrderDto) {\n    return this.ordersService.update(id, updateOrderDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete an order' })\n  remove(@Param('id') id: string) {\n    return this.ordersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_imports\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nProductsModule->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './orders.service';\nimport { Order } from './entities/order.entity';\nimport { OrderItem } from './entities/order-item.entity';\nimport { OrderAddress } from './entities/order-address.entity';\nimport { ProductsModule } from '../products/products.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Order, OrderItem, OrderAddress]),\n    ProductsModule, // Import to use ProductsService for product information\n  ],\n  controllers: [OrdersController],\n  providers: [OrdersService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ordersRepository: Repository, orderItemsRepository: Repository, productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ordersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderItemsRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOrderDto: UpdateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            UpdateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Order, OrderStatus } from './entities/order.entity';\nimport { CreateOrderDto } from './dtos/create-order.dto';\nimport { UpdateOrderDto } from './dtos/update-order.dto';\nimport { OrderItem } from './entities/order-item.entity';\nimport { ProductsService } from '../products/products.service';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    @InjectRepository(Order)\n    private ordersRepository: Repository,\n    @InjectRepository(OrderItem)\n    private orderItemsRepository: Repository,\n    private productsService: ProductsService,\n  ) {}\n\n  async create(createOrderDto: CreateOrderDto): Promise {\n    const { items, status, ...orderData } = createOrderDto;\n\n    const newOrder = this.ordersRepository.create({ \n      ...orderData, \n      status: status ? status as OrderStatus : OrderStatus.PENDING,\n      customer: { id: createOrderDto.customerId } \n    });\n    const savedOrder = await this.ordersRepository.save(newOrder);\n\n    if (items && items.length > 0) {\n      const orderItems: OrderItem[] = [];\n      let totalOrderPrice = 0;\n\n      for (const itemDto of items) {\n        const product = await this.productsService.findOne(itemDto.product_id);\n        if (!product) {\n          throw new NotFoundException(`Product with ID ${itemDto.product_id} not found.`);\n        }\n\n        const orderItem = this.orderItemsRepository.create({\n          product: product,\n          quantity: itemDto.quantity,\n          unit_price: product.price, // Assuming product price is the unit price for the order item\n          order: savedOrder,\n        });\n        orderItems.push(orderItem);\n        totalOrderPrice += product.price * itemDto.quantity;\n      }\n      await this.orderItemsRepository.save(orderItems);\n    }\n    return savedOrder;\n  }\n\n  async findAll(): Promise {\n    return this.ordersRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const order = await this.ordersRepository.findOneBy({ id });\n    if (!order) {\n      throw new NotFoundException(`Order with id ${id} not found`);\n    }\n    return order;\n  }\n\n  async update(id: string, updateOrderDto: UpdateOrderDto): Promise {\n    const order = await this.findOne(id);\n    Object.assign(order, updateOrderDto);\n    return this.ordersRepository.save(order);\n  }\n\n  async remove(id: string): Promise {\n    const order = await this.findOne(id);\n    await this.ordersRepository.remove(order);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/entities/payment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                currency_code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                order_id\n                            \n                            \n                                    \n                                provider_id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n@Entity()\nexport class Payment {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  order_id: string;\n\n  @Column()\n  provider_id: string;\n\n  @Column()\n  status: string;\n\n  @Column('decimal')\n  amount: number;\n\n  @Column({ nullable: true })\n  currency_code: string;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(paymentData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new payment'})\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all payments'})\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get payment by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete payment by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update payment by ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Put, Delete, HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { PaymentService } from './payment.service';\nimport { Payment } from './entities/payment.entity';\n\n@ApiTags('payment')\n@Controller('payment')\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new payment' })\n  async create(@Body() paymentData: Partial) {\n    try {\n      const payment = await this.paymentService.create(paymentData);\n      return payment;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all payments' })\n  async findAll() {\n    return this.paymentService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get payment by ID' })\n  async findOne(@Param('id') id: string) {\n    try {\n      return await this.paymentService.findOne(id);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\n    }\n  }\n\n  @Put(':id')\n  @ApiOperation({ summary: 'Update payment by ID' })\n  async update(@Param('id') id: string, @Body() updateData: Partial) {\n    try {\n      return await this.paymentService.update(id, updateData);\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete payment by ID' })\n  async remove(@Param('id') id: string) {\n    try {\n      await this.paymentService.remove(id);\n      return { message: 'Payment deleted successfully' };\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PaymentModule_exports\n\n\n\n\nPaymentService \n\nPaymentService \n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentService  -->\n\nPaymentModule->PaymentService \n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PaymentService } from './payment.service';\nimport { PaymentController } from './payment.controller';\nimport { Payment } from './entities/payment.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Payment])],\n  providers: [PaymentService],\n  controllers: [PaymentController],\n  exports: [PaymentService],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/payment/payment.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(paymentData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Payment } from './entities/payment.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    @InjectRepository(Payment)\n    private paymentRepository: Repository,\n  ) {}\n\n  async create(paymentData: Partial): Promise {\n    const payment = this.paymentRepository.create(paymentData);\n    return this.paymentRepository.save(payment);\n  }\n\n  async findAll(): Promise {\n    return this.paymentRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const payment = await this.paymentRepository.findOne({ where: { id } });\n    if (!payment) {\n      throw new Error('Payment not found');\n    }\n    return payment;\n  }\n\n  async update(id: string, updateData: Partial): Promise {\n    await this.paymentRepository.update(id, updateData);\n    return this.findOne(id);\n  }\n\n  async remove(id: string): Promise {\n    await this.paymentRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/entities/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brand\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                currency\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                discountPrice\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                images\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                reviews\n                            \n                            \n                                    \n                                sku\n                            \n                            \n                                    \n                                slug\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, category => category.products, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 'INR'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discountPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductImage[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.product, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.product, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sku\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Variant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, variant => variant.product, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, OneToMany } from 'typeorm';\nimport { Category } from './category.entity';\nimport { ProductImage } from './product-image.entity';\nimport { Review } from './review.entity';\nimport { Variant } from './variant.entity';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column({ unique: true })\n  slug: string;\n\n  @Column(\"text\")\n  description: string;\n\n  @Column(\"decimal\")\n  price: number;\n\n  @Column(\"decimal\", { nullable: true })\n  discountPrice: number;\n\n  @Column({ default: \"INR\" })\n  currency: string;\n\n  @Column()\n  sku: string;\n\n  @Column(\"int\")\n  stock: number;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @Column({ nullable: true })\n  brand: string;\n\n  @ManyToOne(() => Category, (category) => category.products, { eager: true })\n  category: Category;\n\n  @OneToMany(() => ProductImage, (image) => image.product, { cascade: true, eager: true })\n  images: ProductImage[];\n\n  @OneToMany(() => Review, (review) => review.product, { cascade: true })\n  reviews: Review[];\n\n  @OneToMany(() => Variant, (variant) => variant.product, { cascade: true })\n  variants: Variant[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImage.html":{"url":"entities/ProductImage.html","title":"entity - ProductImage","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/entities/product-image.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                altText\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        altText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product-image.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product-image.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.images, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product-image.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product-image.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { Product } from './product.entity';\n\n@Entity()\nexport class ProductImage {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: string;\n\n  @Column()\n  url: string;\n\n  @Column({ nullable: true })\n  altText: string;\n\n  @ManyToOne(() => Product, (product) => product.images, { onDelete: 'CASCADE' })\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Put, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { UpdateProductDto } from './dtos/update-product.dto';\n\n@ApiTags('products')\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productsService.create(createProductDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.productsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.productsService.findOne(id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productsService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.productsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService \n\nProductsService \n\n\n\nProductsModule\n\nProductsModule\n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { Product } from './entities/product.entity';\nimport { Category } from './entities/category.entity';\nimport { ProductImage } from './entities/product-image.entity';\nimport { Review } from './entities/review.entity';\nimport { Variant } from './entities/variant.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Product, Category, ProductImage, Review, Variant])],\n  providers: [ProductsService],\n  controllers: [ProductsController],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Product } from './entities/product.entity';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { UpdateProductDto } from './dtos/update-product.dto';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(Product)\n    private productsRepository: Repository,\n  ) {}\n\n  async create(createProductDto: CreateProductDto): Promise {\n    const product = this.productsRepository.create(createProductDto);\n    return this.productsRepository.save(product);\n  }\n\n  async findAll(): Promise {\n    return this.productsRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const product = await this.productsRepository.findOneBy({ id });\n    if (!product) {\n      throw new NotFoundException(`Product with id ${id} not found`);\n    }\n    return product;\n  }\n\n  async update(id: string, updateProductDto: UpdateProductDto): Promise {\n    const product = await this.findOne(id);\n    Object.assign(product, updateProductDto);\n    return this.productsRepository.save(product);\n  }\n\n  async remove(id: string): Promise {\n    const product = await this.findOne(id);\n    await this.productsRepository.remove(product);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/register.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({default: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class RegisterDto {\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  password: string;\n\n  @ApiProperty({ default: 'user' })\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Review.html":{"url":"entities/Review.html","title":"entity - Review","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/entities/review.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                comment\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                rating\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/review.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/review.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/review.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.reviews)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/review.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/review.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.reviews)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/review.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne, CreateDateColumn } from 'typeorm';\nimport { User } from '../../users/entities/user.entity';\nimport { Product } from './product.entity';\n\n@Entity()\nexport class Review {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: string;\n\n  @Column(\"int\")\n  rating: number; // 1 to 5 stars\n\n  @Column(\"text\")\n  comment: string;\n\n  @ManyToOne(() => User, (user) => user.reviews)\n  user: User;\n\n  @ManyToOne(() => Product, (product) => product.reviews)\n  product: Product;\n\n  @CreateDateColumn()\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAddressDto.html":{"url":"classes/UpdateAddressDto.html","title":"class - UpdateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/dto/update-address.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAddressDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAddressDto } from './create-address.dto';\n\nexport class UpdateAddressDto extends PartialType(CreateAddressDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dtos/update-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateOrderDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOrderDto } from './create-order.dto';\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  OmitType(CreateUserDto, ['password'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, OmitType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(CreateUserDto, ['password'] as const),\n) {\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addresses\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isVerified\n                            \n                            \n                                    \n                                lastLogin\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                passwordHash\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                profileImage\n                            \n                            \n                                    \n                                reviews\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Address[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n} from 'typeorm';\nimport { Review } from '../../products/entities/review.entity';\nimport { Address } from '../../address/entities/address.entity';\n\n\nexport enum UserRole {\n  CUSTOMER = 'customer',\n  ADMIN = 'admin',\n  SELLER = 'seller',\n}\n\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column({ select: false })\n  passwordHash: string;\n\n  @Column({ nullable: true })\n  username: string;\n\n  @Column({ nullable: true })\n  phoneNumber: string;\n\n  @Column({ nullable: true })\n  firstName: string;\n\n  @Column({ nullable: true })\n  lastName: string;\n\n  @Column({ nullable: true })\n  profileImage: string;\n\n  @Column({ type: 'date', nullable: true })\n  dateOfBirth: Date;\n\n  @Column({ nullable: true })\n  gender: string; // or ENUM('male', 'female', 'other')\n\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.CUSTOMER,\n  })\n  role: UserRole;\n\n  @Column({ default: false })\n  isVerified: boolean;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @Column({ type: 'timestamp', nullable: true })\n  lastLogin: Date;\n\n  @OneToMany(() => Review, (review: Review) => review.user)\n  reviews: Review[];\n\n  @OneToMany(() => Address, (address) => address.user)\n  addresses: Address[];\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Patch, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UpdateUserDto } from './dtos/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProductsModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductsModule } from '../products/products.module';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User]), ProductsModule],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { User } from './entities/user.entity';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UpdateUserDto } from './dtos/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const user = this.usersRepository.create(createUserDto);\n    if (createUserDto.password) {\n      user.passwordHash = await bcrypt.hash(createUserDto.password, 10);\n    }\n    return this.usersRepository.save(user);\n  }\n\n  async findAll(): Promise {\n    return this.usersRepository.find();\n  }\n\n  async findOne(id: string): Promise {\n    const user = await this.usersRepository.findOneBy({ id });\n    if (!user) {\n      throw new NotFoundException(`User with id ${id} not found`);\n    }\n    return user;\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    const user = await this.findOne(id);\n    if (updateUserDto.password) {\n      user.passwordHash = await bcrypt.hash(updateUserDto.password, 10);\n      delete updateUserDto.password;\n    }\n    Object.assign(user, updateUserDto);\n    return this.usersRepository.save(user);\n  }\n\n  async remove(id: string): Promise {\n    const user = await this.findOne(id);\n    await this.usersRepository.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Variant.html":{"url":"entities/Variant.html","title":"entity - Variant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Variant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/entities/variant.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                priceAdjustment\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/variant.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priceAdjustment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('decimal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/variant.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.variants)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/variant.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/variant.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/entities/variant.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { Product } from './product.entity';\n\n@Entity()\nexport class Variant {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: string;\n\n  @Column()\n  type: string; // e.g., \"Color\", \"Size\"\n\n  @Column()\n  value: string; // e.g., \"Red\", \"XL\"\n\n  @Column(\"decimal\")\n  priceAdjustment: number; // +100 or -50\n\n  @ManyToOne(() => Product, (product) => product.variants)\n  product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/address/address.controller.ts\n            \n            controller\n            AddressController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/address/dto/create-address.dto.ts\n            \n            class\n            CreateAddressDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/address/dto/update-address.dto.ts\n            \n            class\n            UpdateAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/address/entities/address.entity.ts\n            \n            entity\n            Address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/auth/decorators/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            entity\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/cart.controller.ts\n            \n            controller\n            CartController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cart/entities/cart-item.entity.ts\n            \n            entity\n            CartItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/entities/cart.entity.ts\n            \n            entity\n            Cart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/customer.controller.ts\n            \n            controller\n            CustomerController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/customer/entities/customer.entity.ts\n            \n            entity\n            Customer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discount/discount.controller.ts\n            \n            controller\n            DiscountController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/discount/discount.service.ts\n            \n            injectable\n            DiscountService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/discount/entities/discount.entity.ts\n            \n            entity\n            Discount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fulfillment/entities/fulfillment.entity.ts\n            \n            entity\n            Fulfillment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fulfillment/fulfillment.controller.ts\n            \n            controller\n            FulfillmentController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/fulfillment/fulfillment.service.ts\n            \n            injectable\n            FulfillmentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/dtos/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/orders/dtos/create-order.dto.ts\n            \n            class\n            CreateOrderItemDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/dtos/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/entities/address.entity.ts\n            \n            entity\n            Address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/entities/order-address.entity.ts\n            \n            entity\n            OrderAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/entities/order-item.entity.ts\n            \n            entity\n            OrderItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/entities/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/payment/entities/payment.entity.ts\n            \n            entity\n            Payment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/dtos/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/products/dtos/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/entities/category.entity.ts\n            \n            entity\n            Category\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/entities/product-image.entity.ts\n            \n            entity\n            ProductImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/entities/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/entities/review.entity.ts\n            \n            entity\n            Review\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/entities/variant.entity.ts\n            \n            entity\n            Variant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/bcrypt : ^6.0.0\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.16.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.25\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderStatus   (src/.../order.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/orders/entities/order.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 PAID\n                            \n                        \n                        \n                            \n                                Value : paid\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : shipped\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : delivered\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n            \n        \n\n    src/users/entities/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : customer\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 SELLER\n                            \n                        \n                        \n                            \n                                Value : seller\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FulfillmentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_exports\n\n\n\ncluster_AddressModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_exports\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_DiscountModule\n\n\n\ncluster_DiscountModule_exports\n\n\n\ncluster_DiscountModule_providers\n\n\n\ncluster_FulfillmentModule\n\n\n\ncluster_FulfillmentModule_exports\n\n\n\ncluster_FulfillmentModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_exports\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAddressService \n\nAddressService \n\n\n\nAddressModule\n\nAddressModule\n\nAddressService  -->\n\nAddressModule->AddressService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCartService \n\nCartService \n\nCartService  -->\n\nCartModule->CartService \n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nCustomerService \n\nCustomerService \n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nDiscountModule\n\nDiscountModule\n\nAppModule -->\n\nDiscountModule->AppModule\n\n\n\n\n\nDiscountService \n\nDiscountService \n\nDiscountService  -->\n\nDiscountModule->DiscountService \n\n\n\n\n\nFulfillmentModule\n\nFulfillmentModule\n\nAppModule -->\n\nFulfillmentModule->AppModule\n\n\n\n\n\nFulfillmentService \n\nFulfillmentService \n\nFulfillmentService  -->\n\nFulfillmentModule->FulfillmentService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaymentService \n\nPaymentService \n\nPaymentService  -->\n\nPaymentModule->PaymentService \n\n\n\n\n\nProductsModule\n\nProductsModule\n\nOrdersModule -->\n\nProductsModule->OrdersModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProductsModule->UsersModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\nDiscountService\n\nDiscountService\n\nDiscountModule -->\n\nDiscountService->DiscountModule\n\n\n\n\n\nFulfillmentService\n\nFulfillmentService\n\nFulfillmentModule -->\n\nFulfillmentService->FulfillmentModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): User => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
